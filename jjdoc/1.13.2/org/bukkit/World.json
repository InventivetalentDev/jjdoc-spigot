{"name":"World","comment":"Represents a world, which may contain entities, chunks and blocks","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"World","qualifiedName":"org.bukkit.World","dimension":"","elementType":{},"package":"org.bukkit","interfaces":["org.bukkit.plugin.messaging.PluginMessageRecipient","org.bukkit.metadata.Metadatable"],"isAbstract":true,"isStatic":false,"innerClasses":["org.bukkit.World.Spigot","org.bukkit.World.Environment"],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getBlockAt","comment":"Gets the {@link Block} at the given coordinates","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int, int)","flatSignature":"(int, int, int)","returnType":{"isPrimitive":false,"simpleName":"Block","qualifiedName":"org.bukkit.block.Block","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getBlockAt","comment":"Gets the {@link Block} at the given {@link Location}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location)","flatSignature":"(Location)","returnType":{"isPrimitive":false,"simpleName":"Block","qualifiedName":"org.bukkit.block.Block","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getHighestBlockYAt","comment":"Gets the y coordinate of the lowest block at this position such that the\n block and all blocks above it are transparent for lighting purposes.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getHighestBlockYAt","comment":"Gets the y coordinate of the lowest block at the given {@link Location}\n such that the block and all blocks above it are transparent for lighting\n purposes.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location)","flatSignature":"(Location)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getHighestBlockAt","comment":"Gets the lowest block at the given coordinates such that the block and\n all blocks above it are transparent for lighting purposes.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":false,"simpleName":"Block","qualifiedName":"org.bukkit.block.Block","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getHighestBlockAt","comment":"Gets the lowest block at the given {@link Location} such that the block\n and all blocks above it are transparent for lighting purposes.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location)","flatSignature":"(Location)","returnType":{"isPrimitive":false,"simpleName":"Block","qualifiedName":"org.bukkit.block.Block","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getChunkAt","comment":"Gets the {@link Chunk} at the given coordinates","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":false,"simpleName":"Chunk","qualifiedName":"org.bukkit.Chunk","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getChunkAt","comment":"Gets the {@link Chunk} at the given {@link Location}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location)","flatSignature":"(Location)","returnType":{"isPrimitive":false,"simpleName":"Chunk","qualifiedName":"org.bukkit.Chunk","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getChunkAt","comment":"Gets the {@link Chunk} that contains the given {@link Block}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.block.Block)","flatSignature":"(Block)","returnType":{"isPrimitive":false,"simpleName":"Chunk","qualifiedName":"org.bukkit.Chunk","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"block","type":{"isPrimitive":false,"simpleName":"Block","qualifiedName":"org.bukkit.block.Block","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isChunkLoaded","comment":"Checks if the specified {@link Chunk} is loaded","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Chunk)","flatSignature":"(Chunk)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"chunk","type":{"isPrimitive":false,"simpleName":"Chunk","qualifiedName":"org.bukkit.Chunk","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getLoadedChunks","comment":"Gets an array of all loaded {@link Chunk}s","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Chunk","qualifiedName":"org.bukkit.Chunk","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Chunk","qualifiedName":"org.bukkit.Chunk","dimension":"","elementType":{}}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"loadChunk","comment":"Loads the specified {@link Chunk}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Chunk)","flatSignature":"(Chunk)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"chunk","type":{"isPrimitive":false,"simpleName":"Chunk","qualifiedName":"org.bukkit.Chunk","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isChunkLoaded","comment":"Checks if the {@link Chunk} at the specified coordinates is loaded","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isChunkGenerated","comment":"Checks if the {@link Chunk} at the specified coordinates is generated","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isChunkInUse","comment":"Checks if the {@link Chunk} at the specified coordinates is loaded and\n in use by one or more players","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"loadChunk","comment":"Loads the {@link Chunk} at the specified coordinates\n \u003cp\u003e\n If the chunk does not exist, it will be generated.\n \u003cp\u003e\n This method is analogous to {@link #loadChunk(int, int, boolean)} where\n generate is true.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"loadChunk","comment":"Loads the {@link Chunk} at the specified coordinates","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int, boolean)","flatSignature":"(int, int, boolean)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"generate","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"unloadChunk","comment":"Safely unloads and saves the {@link Chunk} at the specified coordinates\n \u003cp\u003e\n This method is analogous to {@link #unloadChunk(int, int, boolean,\n boolean)} where safe and saveis true","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Chunk)","flatSignature":"(Chunk)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"chunk","type":{"isPrimitive":false,"simpleName":"Chunk","qualifiedName":"org.bukkit.Chunk","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"unloadChunk","comment":"Safely unloads and saves the {@link Chunk} at the specified coordinates\n \u003cp\u003e\n This method is analogous to {@link #unloadChunk(int, int, boolean,\n boolean)} where safe and saveis true","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"unloadChunk","comment":"Safely unloads and optionally saves the {@link Chunk} at the specified\n coordinates\n \u003cp\u003e\n This method is analogous to {@link #unloadChunk(int, int, boolean,\n boolean)} where save is true","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int, boolean)","flatSignature":"(int, int, boolean)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"save","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"unloadChunk","comment":"Unloads and optionally saves the {@link Chunk} at the specified\n coordinates","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int, boolean, boolean)","flatSignature":"(int, int, boolean, boolean)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"save","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}},{"name":"safe","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"unloadChunkRequest","comment":"Safely queues the {@link Chunk} at the specified coordinates for\n unloading\n \u003cp\u003e\n This method is analogous to {@link #unloadChunkRequest(int, int,\n boolean)} where safe is true","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"unloadChunkRequest","comment":"Queues the {@link Chunk} at the specified coordinates for unloading","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int, boolean)","flatSignature":"(int, int, boolean)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"safe","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"regenerateChunk","comment":"Regenerates the {@link Chunk} at the specified coordinates","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"refreshChunk","comment":"Resends the {@link Chunk} to all clients","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isChunkForceLoaded","comment":"Gets whether the chunk at the specified chunk coordinates is force\n loaded.\n \u003cp\u003e\n A force loaded chunk will not be unloaded due to lack of player activity.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setChunkForceLoaded","comment":"Sets whether the chunk at the specified chunk coordinates is force\n loaded.\n \u003cp\u003e\n A force loaded chunk will not be unloaded due to lack of player activity.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int, boolean)","flatSignature":"(int, int, boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"forced","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getForceLoadedChunks","comment":"Returns all force loaded chunks in this world.\n \u003cp\u003e\n A force loaded chunk will not be unloaded due to lack of player activity.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Collection","qualifiedName":"java.util.Collection","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"dropItem","comment":"Drops an item at the specified {@link Location}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.inventory.ItemStack)","flatSignature":"(Location, ItemStack)","returnType":{"isPrimitive":false,"simpleName":"Item","qualifiedName":"org.bukkit.entity.Item","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"item","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"dropItemNaturally","comment":"Drops an item at the specified {@link Location} with a random offset","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.inventory.ItemStack)","flatSignature":"(Location, ItemStack)","returnType":{"isPrimitive":false,"simpleName":"Item","qualifiedName":"org.bukkit.entity.Item","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"item","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnArrow","comment":"Creates an {@link Arrow} entity at the given {@link Location}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.util.Vector, float, float)","flatSignature":"(Location, Vector, float, float)","returnType":{"isPrimitive":false,"simpleName":"Arrow","qualifiedName":"org.bukkit.entity.Arrow","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"direction","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"speed","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"spread","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnArrow","comment":"Creates an arrow entity of the given class at the given {@link Location}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.util.Vector, float, float, java.lang.Class\u003cT\u003e)","flatSignature":"(Location, Vector, float, float, Class\u003cT\u003e)","returnType":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":["org.bukkit.entity.Arrow"]}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"direction","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"speed","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"spread","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"clazz","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":["org.bukkit.entity.Arrow"]}]},{"name":"generateTree","comment":"Creates a tree at the given {@link Location}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.TreeType)","flatSignature":"(Location, TreeType)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"type","type":{"isPrimitive":false,"simpleName":"TreeType","qualifiedName":"org.bukkit.TreeType","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"generateTree","comment":"Creates a tree at the given {@link Location}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.TreeType, org.bukkit.BlockChangeDelegate)","flatSignature":"(Location, TreeType, BlockChangeDelegate)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"type","type":{"isPrimitive":false,"simpleName":"TreeType","qualifiedName":"org.bukkit.TreeType","dimension":"","elementType":{}}},{"name":"delegate","type":{"isPrimitive":false,"simpleName":"BlockChangeDelegate","qualifiedName":"org.bukkit.BlockChangeDelegate","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnEntity","comment":"Creates a entity at the given {@link Location}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.entity.EntityType)","flatSignature":"(Location, EntityType)","returnType":{"isPrimitive":false,"simpleName":"Entity","qualifiedName":"org.bukkit.entity.Entity","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"type","type":{"isPrimitive":false,"simpleName":"EntityType","qualifiedName":"org.bukkit.entity.EntityType","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"strikeLightning","comment":"Strikes lightning at the given {@link Location}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location)","flatSignature":"(Location)","returnType":{"isPrimitive":false,"simpleName":"LightningStrike","qualifiedName":"org.bukkit.entity.LightningStrike","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"strikeLightningEffect","comment":"Strikes lightning at the given {@link Location} without doing damage","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location)","flatSignature":"(Location)","returnType":{"isPrimitive":false,"simpleName":"LightningStrike","qualifiedName":"org.bukkit.entity.LightningStrike","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getEntities","comment":"Get a list of all entities in this World","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"List","qualifiedName":"java.util.List","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getLivingEntities","comment":"Get a list of all living entities in this World","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"List","qualifiedName":"java.util.List","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getEntitiesByClass","comment":"Get a collection of all entities in this World matching the given\n class/interface","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Class\u003cT\u003e...)","flatSignature":"(Class\u003cT\u003e...)","returnType":{"isPrimitive":false,"simpleName":"Collection","qualifiedName":"java.util.Collection","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"classes","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}}],"typeParameters":[{"name":"T","bounds":["org.bukkit.entity.Entity"]}]},{"name":"getEntitiesByClass","comment":"Get a collection of all entities in this World matching the given\n class/interface","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Class\u003cT\u003e)","flatSignature":"(Class\u003cT\u003e)","returnType":{"isPrimitive":false,"simpleName":"Collection","qualifiedName":"java.util.Collection","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"cls","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":["org.bukkit.entity.Entity"]}]},{"name":"getEntitiesByClasses","comment":"Get a collection of all entities in this World matching any of the\n given classes/interfaces","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Class\u003c?\u003e...)","flatSignature":"(Class\u003c?\u003e...)","returnType":{"isPrimitive":false,"simpleName":"Collection","qualifiedName":"java.util.Collection","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"classes","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"getPlayers","comment":"Get a list of all players in this World","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"List","qualifiedName":"java.util.List","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getNearbyEntities","comment":"Returns a list of entities within a bounding box centered around a\n Location.\n \u003cp\u003e\n This may not consider entities in currently unloaded chunks. Some\n implementations may impose artificial restrictions on the size of the\n search bounding box.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, double, double, double)","flatSignature":"(Location, double, double, double)","returnType":{"isPrimitive":false,"simpleName":"Collection","qualifiedName":"java.util.Collection","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getNearbyEntities","comment":"Returns a list of entities within a bounding box centered around a\n Location.\n \u003cp\u003e\n This may not consider entities in currently unloaded chunks. Some\n implementations may impose artificial restrictions on the size of the\n search bounding box.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, double, double, double, java.util.function.Predicate\u003corg.bukkit.entity.Entity\u003e)","flatSignature":"(Location, double, double, double, Predicate\u003cEntity\u003e)","returnType":{"isPrimitive":false,"simpleName":"Collection","qualifiedName":"java.util.Collection","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"filter","type":{"isPrimitive":false,"simpleName":"Predicate","qualifiedName":"java.util.function.Predicate","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getNearbyEntities","comment":"Returns a list of entities within the given bounding box.\n \u003cp\u003e\n This may not consider entities in currently unloaded chunks. Some\n implementations may impose artificial restrictions on the size of the\n search bounding box.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.BoundingBox)","flatSignature":"(BoundingBox)","returnType":{"isPrimitive":false,"simpleName":"Collection","qualifiedName":"java.util.Collection","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"boundingBox","type":{"isPrimitive":false,"simpleName":"BoundingBox","qualifiedName":"org.bukkit.util.BoundingBox","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getNearbyEntities","comment":"Returns a list of entities within the given bounding box.\n \u003cp\u003e\n This may not consider entities in currently unloaded chunks. Some\n implementations may impose artificial restrictions on the size of the\n search bounding box.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.BoundingBox, java.util.function.Predicate\u003corg.bukkit.entity.Entity\u003e)","flatSignature":"(BoundingBox, Predicate\u003cEntity\u003e)","returnType":{"isPrimitive":false,"simpleName":"Collection","qualifiedName":"java.util.Collection","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"boundingBox","type":{"isPrimitive":false,"simpleName":"BoundingBox","qualifiedName":"org.bukkit.util.BoundingBox","dimension":"","elementType":{}}},{"name":"filter","type":{"isPrimitive":false,"simpleName":"Predicate","qualifiedName":"java.util.function.Predicate","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"rayTraceEntities","comment":"Performs a ray trace that checks for entity collisions.\n \u003cp\u003e\n This may not consider entities in currently unloaded chunks. Some\n implementations may impose artificial restrictions on the maximum\n distance.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.util.Vector, double)","flatSignature":"(Location, Vector, double)","returnType":{"isPrimitive":false,"simpleName":"RayTraceResult","qualifiedName":"org.bukkit.util.RayTraceResult","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"start","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"direction","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"maxDistance","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"rayTraceEntities","comment":"Performs a ray trace that checks for entity collisions.\n \u003cp\u003e\n This may not consider entities in currently unloaded chunks. Some\n implementations may impose artificial restrictions on the maximum\n distance.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.util.Vector, double, double)","flatSignature":"(Location, Vector, double, double)","returnType":{"isPrimitive":false,"simpleName":"RayTraceResult","qualifiedName":"org.bukkit.util.RayTraceResult","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"start","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"direction","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"maxDistance","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"raySize","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"rayTraceEntities","comment":"Performs a ray trace that checks for entity collisions.\n \u003cp\u003e\n This may not consider entities in currently unloaded chunks. Some\n implementations may impose artificial restrictions on the maximum\n distance.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.util.Vector, double, java.util.function.Predicate\u003corg.bukkit.entity.Entity\u003e)","flatSignature":"(Location, Vector, double, Predicate\u003cEntity\u003e)","returnType":{"isPrimitive":false,"simpleName":"RayTraceResult","qualifiedName":"org.bukkit.util.RayTraceResult","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"start","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"direction","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"maxDistance","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"filter","type":{"isPrimitive":false,"simpleName":"Predicate","qualifiedName":"java.util.function.Predicate","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"rayTraceEntities","comment":"Performs a ray trace that checks for entity collisions.\n \u003cp\u003e\n This may not consider entities in currently unloaded chunks. Some\n implementations may impose artificial restrictions on the maximum\n distance.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.util.Vector, double, double, java.util.function.Predicate\u003corg.bukkit.entity.Entity\u003e)","flatSignature":"(Location, Vector, double, double, Predicate\u003cEntity\u003e)","returnType":{"isPrimitive":false,"simpleName":"RayTraceResult","qualifiedName":"org.bukkit.util.RayTraceResult","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"start","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"direction","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"maxDistance","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"raySize","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"filter","type":{"isPrimitive":false,"simpleName":"Predicate","qualifiedName":"java.util.function.Predicate","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"rayTraceBlocks","comment":"Performs a ray trace that checks for block collisions using the blocks\u0027\n precise collision shapes.\n \u003cp\u003e\n This takes collisions with passable blocks into account, but ignores\n fluids.\n \u003cp\u003e\n This may cause loading of chunks! Some implementations may impose\n artificial restrictions on the maximum distance.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.util.Vector, double)","flatSignature":"(Location, Vector, double)","returnType":{"isPrimitive":false,"simpleName":"RayTraceResult","qualifiedName":"org.bukkit.util.RayTraceResult","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"start","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"direction","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"maxDistance","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"rayTraceBlocks","comment":"Performs a ray trace that checks for block collisions using the blocks\u0027\n precise collision shapes.\n \u003cp\u003e\n This takes collisions with passable blocks into account.\n \u003cp\u003e\n This may cause loading of chunks! Some implementations may impose\n artificial restrictions on the maximum distance.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.util.Vector, double, org.bukkit.FluidCollisionMode)","flatSignature":"(Location, Vector, double, FluidCollisionMode)","returnType":{"isPrimitive":false,"simpleName":"RayTraceResult","qualifiedName":"org.bukkit.util.RayTraceResult","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"start","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"direction","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"maxDistance","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"fluidCollisionMode","type":{"isPrimitive":false,"simpleName":"FluidCollisionMode","qualifiedName":"org.bukkit.FluidCollisionMode","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"rayTraceBlocks","comment":"Performs a ray trace that checks for block collisions using the blocks\u0027\n precise collision shapes.\n \u003cp\u003e\n If collisions with passable blocks are ignored, fluid collisions are\n ignored as well regardless of the fluid collision mode.\n \u003cp\u003e\n Portal blocks are only considered passable if the ray starts within\n them. Apart from that collisions with portal blocks will be considered\n even if collisions with passable blocks are otherwise ignored.\n \u003cp\u003e\n This may cause loading of chunks! Some implementations may impose\n artificial restrictions on the maximum distance.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.util.Vector, double, org.bukkit.FluidCollisionMode, boolean)","flatSignature":"(Location, Vector, double, FluidCollisionMode, boolean)","returnType":{"isPrimitive":false,"simpleName":"RayTraceResult","qualifiedName":"org.bukkit.util.RayTraceResult","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"start","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"direction","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"maxDistance","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"fluidCollisionMode","type":{"isPrimitive":false,"simpleName":"FluidCollisionMode","qualifiedName":"org.bukkit.FluidCollisionMode","dimension":"","elementType":{}}},{"name":"ignorePassableBlocks","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"rayTrace","comment":"Performs a ray trace that checks for both block and entity collisions.\n \u003cp\u003e\n Block collisions use the blocks\u0027 precise collision shapes. The\n \u003ccode\u003eraySize\u003c/code\u003e parameter is only taken into account for entity\n collision checks.\n \u003cp\u003e\n If collisions with passable blocks are ignored, fluid collisions are\n ignored as well regardless of the fluid collision mode.\n \u003cp\u003e\n Portal blocks are only considered passable if the ray starts within them.\n Apart from that collisions with portal blocks will be considered even if\n collisions with passable blocks are otherwise ignored.\n \u003cp\u003e\n This may cause loading of chunks! Some implementations may impose\n artificial restrictions on the maximum distance.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.util.Vector, double, org.bukkit.FluidCollisionMode, boolean, double, java.util.function.Predicate\u003corg.bukkit.entity.Entity\u003e)","flatSignature":"(Location, Vector, double, FluidCollisionMode, boolean, double, Predicate\u003cEntity\u003e)","returnType":{"isPrimitive":false,"simpleName":"RayTraceResult","qualifiedName":"org.bukkit.util.RayTraceResult","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"start","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"direction","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"maxDistance","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"fluidCollisionMode","type":{"isPrimitive":false,"simpleName":"FluidCollisionMode","qualifiedName":"org.bukkit.FluidCollisionMode","dimension":"","elementType":{}}},{"name":"ignorePassableBlocks","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}},{"name":"raySize","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"filter","type":{"isPrimitive":false,"simpleName":"Predicate","qualifiedName":"java.util.function.Predicate","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getName","comment":"Gets the unique name of this world","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getUID","comment":"Gets the Unique ID of this world","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"UUID","qualifiedName":"java.util.UUID","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getSpawnLocation","comment":"Gets the default spawn {@link Location} of this world","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setSpawnLocation","comment":"Sets the spawn location of the world.\n \u003cbr\u003e\n The location provided must be equal to this world.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location)","flatSignature":"(Location)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setSpawnLocation","comment":"Sets the spawn location of the world","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int, int)","flatSignature":"(int, int, int)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getTime","comment":"Gets the relative in-game time of this world.\n \u003cp\u003e\n The relative time is analogous to hours * 1000","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setTime","comment":"Sets the relative in-game time on the server.\n \u003cp\u003e\n The relative time is analogous to hours * 1000\n \u003cp\u003e\n Note that setting the relative time below the current relative time\n will actually move the clock forward a day. If you require to rewind\n time, please see {@link #setFullTime(long)}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"time","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getFullTime","comment":"Gets the full in-game time on this world","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setFullTime","comment":"Sets the in-game time on the server\n \u003cp\u003e\n Note that this sets the full time of the world, which may cause adverse\n effects such as breaking redstone clocks and any scheduled events","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long)","flatSignature":"(long)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"time","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hasStorm","comment":"Returns whether the world has an ongoing storm.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setStorm","comment":"Set whether there is a storm. A duration will be set for the new\n current conditions.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"hasStorm","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getWeatherDuration","comment":"Get the remaining time in ticks of the current conditions.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setWeatherDuration","comment":"Set the remaining time in ticks of the current conditions.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"duration","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isThundering","comment":"Returns whether there is thunder.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setThundering","comment":"Set whether it is thundering.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"thundering","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getThunderDuration","comment":"Get the thundering duration.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setThunderDuration","comment":"Set the thundering duration.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"duration","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createExplosion","comment":"Creates explosion at given coordinates with given power","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double, double, double, float)","flatSignature":"(double, double, double, float)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"power","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createExplosion","comment":"Creates explosion at given coordinates with given power and optionally\n setting blocks on fire.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double, double, double, float, boolean)","flatSignature":"(double, double, double, float, boolean)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"power","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"setFire","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createExplosion","comment":"Creates explosion at given coordinates with given power and optionally\n setting blocks on fire or breaking blocks.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double, double, double, float, boolean, boolean)","flatSignature":"(double, double, double, float, boolean, boolean)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"power","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"setFire","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}},{"name":"breakBlocks","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createExplosion","comment":"Creates explosion at given coordinates with given power","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, float)","flatSignature":"(Location, float)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"power","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createExplosion","comment":"Creates explosion at given coordinates with given power and optionally\n setting blocks on fire.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, float, boolean)","flatSignature":"(Location, float, boolean)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"power","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"setFire","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getEnvironment","comment":"Gets the {@link Environment} type of this world","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Environment","qualifiedName":"org.bukkit.World.Environment","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getSeed","comment":"Gets the Seed for this world.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPVP","comment":"Gets the current PVP setting for this world.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setPVP","comment":"Sets the PVP setting for this world.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"pvp","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getGenerator","comment":"Gets the chunk generator for this world","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"ChunkGenerator","qualifiedName":"org.bukkit.generator.ChunkGenerator","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"save","comment":"Saves world to disk","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPopulators","comment":"Gets a list of all applied {@link BlockPopulator}s for this World","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"List","qualifiedName":"java.util.List","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"spawn","comment":"Spawn an entity of a specific class at the given {@link Location}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, java.lang.Class\u003cT\u003e)","flatSignature":"(Location, Class\u003cT\u003e)","returnType":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":["org.bukkit.entity.Entity"]}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"clazz","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":["org.bukkit.entity.Entity"]}]},{"name":"spawn","comment":"Spawn an entity of a specific class at the given {@link Location}, with\n the supplied function run before the entity is added to the world.\n \u003cbr\u003e\n Note that when the function is run, the entity will not be actually in\n the world. Any operation involving such as teleporting the entity is undefined\n until after this function returns.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, java.lang.Class\u003cT\u003e, org.bukkit.util.Consumer\u003cT\u003e)","flatSignature":"(Location, Class\u003cT\u003e, Consumer\u003cT\u003e)","returnType":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":["org.bukkit.entity.Entity"]}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"clazz","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}},{"name":"function","type":{"isPrimitive":false,"simpleName":"Consumer","qualifiedName":"org.bukkit.util.Consumer","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":["org.bukkit.entity.Entity"]}]},{"name":"spawnFallingBlock","comment":"Spawn a {@link FallingBlock} entity at the given {@link Location} of\n the specified {@link Material}. The material dictates what is falling.\n When the FallingBlock hits the ground, it will place that block.\n \u003cp\u003e\n The Material must be a block type, check with {@link Material#isBlock()\n material.isBlock()}. The Material may not be air.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.material.MaterialData)","flatSignature":"(Location, MaterialData)","returnType":{"isPrimitive":false,"simpleName":"FallingBlock","qualifiedName":"org.bukkit.entity.FallingBlock","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"MaterialData","qualifiedName":"org.bukkit.material.MaterialData","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnFallingBlock","comment":"Spawn a {@link FallingBlock} entity at the given {@link Location} of\n the specified {@link Material}. The material dictates what is falling.\n When the FallingBlock hits the ground, it will place that block.\n \u003cp\u003e\n The Material must be a block type, check with {@link Material#isBlock()\n material.isBlock()}. The Material may not be air.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.block.data.BlockData)","flatSignature":"(Location, BlockData)","returnType":{"isPrimitive":false,"simpleName":"FallingBlock","qualifiedName":"org.bukkit.entity.FallingBlock","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"BlockData","qualifiedName":"org.bukkit.block.data.BlockData","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnFallingBlock","comment":"Spawn a {@link FallingBlock} entity at the given {@link Location} of the\n specified {@link Material}. The material dictates what is falling.\n When the FallingBlock hits the ground, it will place that block.\n \u003cp\u003e\n The Material must be a block type, check with {@link Material#isBlock()\n material.isBlock()}. The Material may not be air.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.Material, byte)","flatSignature":"(Location, Material, byte)","returnType":{"isPrimitive":false,"simpleName":"FallingBlock","qualifiedName":"org.bukkit.entity.FallingBlock","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playEffect","comment":"Plays an effect to all players within a default radius around a given\n location.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.Effect, int)","flatSignature":"(Location, Effect, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"effect","type":{"isPrimitive":false,"simpleName":"Effect","qualifiedName":"org.bukkit.Effect","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playEffect","comment":"Plays an effect to all players within a given radius around a location.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.Effect, int, int)","flatSignature":"(Location, Effect, int, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"effect","type":{"isPrimitive":false,"simpleName":"Effect","qualifiedName":"org.bukkit.Effect","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"radius","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playEffect","comment":"Plays an effect to all players within a default radius around a given\n location.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.Effect, T)","flatSignature":"(Location, Effect, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"effect","type":{"isPrimitive":false,"simpleName":"Effect","qualifiedName":"org.bukkit.Effect","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"playEffect","comment":"Plays an effect to all players within a given radius around a location.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.Effect, T, int)","flatSignature":"(Location, Effect, T, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"effect","type":{"isPrimitive":false,"simpleName":"Effect","qualifiedName":"org.bukkit.Effect","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}},{"name":"radius","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"getEmptyChunkSnapshot","comment":"Get empty chunk snapshot (equivalent to all air blocks), optionally\n including valid biome data. Used for representing an ungenerated chunk,\n or for fetching only biome data without loading a chunk.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int, boolean, boolean)","flatSignature":"(int, int, boolean, boolean)","returnType":{"isPrimitive":false,"simpleName":"ChunkSnapshot","qualifiedName":"org.bukkit.ChunkSnapshot","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"includeBiome","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}},{"name":"includeBiomeTemp","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setSpawnFlags","comment":"Sets the spawn flags for this.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean, boolean)","flatSignature":"(boolean, boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"allowMonsters","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}},{"name":"allowAnimals","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getAllowAnimals","comment":"Gets whether animals can spawn in this world.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAllowMonsters","comment":"Gets whether monsters can spawn in this world.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getBiome","comment":"Gets the biome for the given block coordinates.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":false,"simpleName":"Biome","qualifiedName":"org.bukkit.block.Biome","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setBiome","comment":"Sets the biome for the given block coordinates","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int, org.bukkit.block.Biome)","flatSignature":"(int, int, Biome)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"bio","type":{"isPrimitive":false,"simpleName":"Biome","qualifiedName":"org.bukkit.block.Biome","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getTemperature","comment":"Gets the temperature for the given block coordinates.\n \u003cp\u003e\n It is safe to run this method when the block does not exist, it will\n not create the block.\n \u003cp\u003e\n This method will return the raw temperature without adjusting for block\n height effects.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getHumidity","comment":"Gets the humidity for the given block coordinates.\n \u003cp\u003e\n It is safe to run this method when the block does not exist, it will\n not create the block.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, int)","flatSignature":"(int, int)","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getMaxHeight","comment":"Gets the maximum height of this world.\n \u003cp\u003e\n If the max height is 100, there are only blocks from y\u003d0 to y\u003d99.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getSeaLevel","comment":"Gets the sea level for this world.\n \u003cp\u003e\n This is often half of {@link #getMaxHeight()}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getKeepSpawnInMemory","comment":"Gets whether the world\u0027s spawn area should be kept loaded into memory\n or not.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setKeepSpawnInMemory","comment":"Sets whether the world\u0027s spawn area should be kept loaded into memory\n or not.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"keepLoaded","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isAutoSave","comment":"Gets whether or not the world will automatically save","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setAutoSave","comment":"Sets whether or not the world will automatically save","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setDifficulty","comment":"Sets the Difficulty of the world.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Difficulty)","flatSignature":"(Difficulty)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"difficulty","type":{"isPrimitive":false,"simpleName":"Difficulty","qualifiedName":"org.bukkit.Difficulty","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getDifficulty","comment":"Gets the Difficulty of the world.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Difficulty","qualifiedName":"org.bukkit.Difficulty","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getWorldFolder","comment":"Gets the folder of this world on disk.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"File","qualifiedName":"java.io.File","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getWorldType","comment":"Gets the type of this world.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"WorldType","qualifiedName":"org.bukkit.WorldType","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"canGenerateStructures","comment":"Gets whether or not structures are being generated.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getTicksPerAnimalSpawns","comment":"Gets the world\u0027s ticks per animal spawns value\n \u003cp\u003e\n This value determines how many ticks there are between attempts to\n spawn animals.\n \u003cp\u003e\n \u003cb\u003eExample Usage:\u003c/b\u003e\n \u003cul\u003e\n \u003cli\u003eA value of 1 will mean the server will attempt to spawn animals in\n     this world every tick.\n \u003cli\u003eA value of 400 will mean the server will attempt to spawn animals\n     in this world every 400th tick.\n \u003cli\u003eA value below 0 will be reset back to Minecraft\u0027s default.\n \u003c/ul\u003e\n \u003cp\u003e\n \u003cb\u003eNote:\u003c/b\u003e\n If set to 0, animal spawning will be disabled for this world. We\n recommend using {@link #setSpawnFlags(boolean, boolean)} to control\n this instead.\n \u003cp\u003e\n Minecraft default: 400.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setTicksPerAnimalSpawns","comment":"Sets the world\u0027s ticks per animal spawns value\n \u003cp\u003e\n This value determines how many ticks there are between attempts to\n spawn animals.\n \u003cp\u003e\n \u003cb\u003eExample Usage:\u003c/b\u003e\n \u003cul\u003e\n \u003cli\u003eA value of 1 will mean the server will attempt to spawn animals in\n     this world every tick.\n \u003cli\u003eA value of 400 will mean the server will attempt to spawn animals\n     in this world every 400th tick.\n \u003cli\u003eA value below 0 will be reset back to Minecraft\u0027s default.\n \u003c/ul\u003e\n \u003cp\u003e\n \u003cb\u003eNote:\u003c/b\u003e\n If set to 0, animal spawning will be disabled for this world. We\n recommend using {@link #setSpawnFlags(boolean, boolean)} to control\n this instead.\n \u003cp\u003e\n Minecraft default: 400.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"ticksPerAnimalSpawns","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getTicksPerMonsterSpawns","comment":"Gets the world\u0027s ticks per monster spawns value\n \u003cp\u003e\n This value determines how many ticks there are between attempts to\n spawn monsters.\n \u003cp\u003e\n \u003cb\u003eExample Usage:\u003c/b\u003e\n \u003cul\u003e\n \u003cli\u003eA value of 1 will mean the server will attempt to spawn monsters in\n     this world every tick.\n \u003cli\u003eA value of 400 will mean the server will attempt to spawn monsters\n     in this world every 400th tick.\n \u003cli\u003eA value below 0 will be reset back to Minecraft\u0027s default.\n \u003c/ul\u003e\n \u003cp\u003e\n \u003cb\u003eNote:\u003c/b\u003e\n If set to 0, monsters spawning will be disabled for this world. We\n recommend using {@link #setSpawnFlags(boolean, boolean)} to control\n this instead.\n \u003cp\u003e\n Minecraft default: 1.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setTicksPerMonsterSpawns","comment":"Sets the world\u0027s ticks per monster spawns value\n \u003cp\u003e\n This value determines how many ticks there are between attempts to\n spawn monsters.\n \u003cp\u003e\n \u003cb\u003eExample Usage:\u003c/b\u003e\n \u003cul\u003e\n \u003cli\u003eA value of 1 will mean the server will attempt to spawn monsters in\n     this world on every tick.\n \u003cli\u003eA value of 400 will mean the server will attempt to spawn monsters\n     in this world every 400th tick.\n \u003cli\u003eA value below 0 will be reset back to Minecraft\u0027s default.\n \u003c/ul\u003e\n \u003cp\u003e\n \u003cb\u003eNote:\u003c/b\u003e\n If set to 0, monsters spawning will be disabled for this world. We\n recommend using {@link #setSpawnFlags(boolean, boolean)} to control\n this instead.\n \u003cp\u003e\n Minecraft default: 1.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"ticksPerMonsterSpawns","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getMonsterSpawnLimit","comment":"Gets limit for number of monsters that can spawn in a chunk in this\n world","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setMonsterSpawnLimit","comment":"Sets the limit for number of monsters that can spawn in a chunk in this\n world\n \u003cp\u003e\n \u003cb\u003eNote:\u003c/b\u003e If set to a negative number the world will use the\n server-wide spawn limit instead.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"limit","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getAnimalSpawnLimit","comment":"Gets the limit for number of animals that can spawn in a chunk in this\n world","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setAnimalSpawnLimit","comment":"Sets the limit for number of animals that can spawn in a chunk in this\n world\n \u003cp\u003e\n \u003cb\u003eNote:\u003c/b\u003e If set to a negative number the world will use the\n server-wide spawn limit instead.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"limit","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getWaterAnimalSpawnLimit","comment":"Gets the limit for number of water animals that can spawn in a chunk in\n this world","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setWaterAnimalSpawnLimit","comment":"Sets the limit for number of water animals that can spawn in a chunk in\n this world\n \u003cp\u003e\n \u003cb\u003eNote:\u003c/b\u003e If set to a negative number the world will use the\n server-wide spawn limit instead.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"limit","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getAmbientSpawnLimit","comment":"Gets the limit for number of ambient mobs that can spawn in a chunk in\n this world","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setAmbientSpawnLimit","comment":"Sets the limit for number of ambient mobs that can spawn in a chunk in\n this world\n \u003cp\u003e\n \u003cb\u003eNote:\u003c/b\u003e If set to a negative number the world will use the\n server-wide spawn limit instead.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"limit","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playSound","comment":"Play a Sound at the provided Location in the World\n \u003cp\u003e\n This function will fail silently if Location or Sound are null.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.Sound, float, float)","flatSignature":"(Location, Sound, float, float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"sound","type":{"isPrimitive":false,"simpleName":"Sound","qualifiedName":"org.bukkit.Sound","dimension":"","elementType":{}}},{"name":"volume","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"pitch","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playSound","comment":"Play a Sound at the provided Location in the World.\n \u003cp\u003e\n This function will fail silently if Location or Sound are null. No\n sound will be heard by the players if their clients do not have the\n respective sound for the value passed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, java.lang.String, float, float)","flatSignature":"(Location, String, float, float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"sound","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"volume","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"pitch","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playSound","comment":"Play a Sound at the provided Location in the World.\n \u003cp\u003e\n This function will fail silently if Location or Sound are null.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.Sound, org.bukkit.SoundCategory, float, float)","flatSignature":"(Location, Sound, SoundCategory, float, float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"sound","type":{"isPrimitive":false,"simpleName":"Sound","qualifiedName":"org.bukkit.Sound","dimension":"","elementType":{}}},{"name":"category","type":{"isPrimitive":false,"simpleName":"SoundCategory","qualifiedName":"org.bukkit.SoundCategory","dimension":"","elementType":{}}},{"name":"volume","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"pitch","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playSound","comment":"Play a Sound at the provided Location in the World.\n \u003cp\u003e\n This function will fail silently if Location or Sound are null. No sound\n will be heard by the players if their clients do not have the respective\n sound for the value passed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, java.lang.String, org.bukkit.SoundCategory, float, float)","flatSignature":"(Location, String, SoundCategory, float, float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"sound","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"category","type":{"isPrimitive":false,"simpleName":"SoundCategory","qualifiedName":"org.bukkit.SoundCategory","dimension":"","elementType":{}}},{"name":"volume","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"pitch","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getGameRules","comment":"Get an array containing the names of all the {@link GameRule}s.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getGameRuleValue","comment":"Gets the current state of the specified rule\n \u003cp\u003e\n Will return null if rule passed is null","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"rule","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setGameRuleValue","comment":"Set the specified gamerule to specified value.\n \u003cp\u003e\n The rule may attempt to validate the value passed, will return true if\n value was set.\n \u003cp\u003e\n If rule is null, the function will return false.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"rule","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"value","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isGameRule","comment":"Checks if string is a valid game rule","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"rule","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getGameRuleValue","comment":"Get the current value for a given {@link GameRule}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.GameRule\u003cT\u003e)","flatSignature":"(GameRule\u003cT\u003e)","returnType":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"rule","type":{"isPrimitive":false,"simpleName":"GameRule","qualifiedName":"org.bukkit.GameRule","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"getGameRuleDefault","comment":"Get the default value for a given {@link GameRule}. This value is not\n guaranteed to match the current value.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.GameRule\u003cT\u003e)","flatSignature":"(GameRule\u003cT\u003e)","returnType":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"rule","type":{"isPrimitive":false,"simpleName":"GameRule","qualifiedName":"org.bukkit.GameRule","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"setGameRule","comment":"Set the given {@link GameRule}\u0027s new value.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.GameRule\u003cT\u003e, T)","flatSignature":"(GameRule\u003cT\u003e, T)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"rule","type":{"isPrimitive":false,"simpleName":"GameRule","qualifiedName":"org.bukkit.GameRule","dimension":"","elementType":{}}},{"name":"newValue","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"getWorldBorder","comment":"Gets the world border for this world.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"WorldBorder","qualifiedName":"org.bukkit.WorldBorder","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, org.bukkit.Location, int)","flatSignature":"(Particle, Location, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, double, double, double, int)","flatSignature":"(Particle, double, double, double, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, org.bukkit.Location, int, T)","flatSignature":"(Particle, Location, int, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, double, double, double, int, T)","flatSignature":"(Particle, double, double, double, int, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, org.bukkit.Location, int, double, double, double)","flatSignature":"(Particle, Location, int, double, double, double)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, double, double, double, int, double, double, double)","flatSignature":"(Particle, double, double, double, int, double, double, double)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, org.bukkit.Location, int, double, double, double, T)","flatSignature":"(Particle, Location, int, double, double, double, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, double, double, double, int, double, double, double, T)","flatSignature":"(Particle, double, double, double, int, double, double, double, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, org.bukkit.Location, int, double, double, double, double)","flatSignature":"(Particle, Location, int, double, double, double, double)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"extra","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, double, double, double, int, double, double, double, double)","flatSignature":"(Particle, double, double, double, int, double, double, double, double)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"extra","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, org.bukkit.Location, int, double, double, double, double, T)","flatSignature":"(Particle, Location, int, double, double, double, double, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"extra","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, double, double, double, int, double, double, double, double, T)","flatSignature":"(Particle, double, double, double, int, double, double, double, double, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"extra","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, org.bukkit.Location, int, double, double, double, double, T, boolean)","flatSignature":"(Particle, Location, int, double, double, double, double, T, boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"extra","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}},{"name":"force","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, double, double, double, int, double, double, double, double, T, boolean)","flatSignature":"(Particle, double, double, double, int, double, double, double, double, T, boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"extra","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}},{"name":"force","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"locateNearestStructure","comment":"Find the closest nearby structure of a given {@link StructureType}.\n Finding unexplored structures can, and will, block if the world is\n looking in chunks that gave not generated yet. This can lead to the world\n temporarily freezing while locating an unexplored structure.\n \u003cp\u003e\n The {@code radius} is not a rigid square radius. Each structure may alter\n how many chunks to check for each iteration. Do not assume that only a\n radius x radius chunk area will be checked. For example,\n {@link StructureType#WOODLAND_MANSION} can potentially check up to 20,000\n blocks away (or more) regardless of the radius used.\n \u003cp\u003e\n This will \u003ci\u003enot\u003c/i\u003e load or generate chunks. This can also lead to\n instances where the server can hang if you are only looking for\n unexplored structures. This is because it will keep looking further and\n further out in order to find the structure.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.StructureType, int, boolean)","flatSignature":"(Location, StructureType, int, boolean)","returnType":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"origin","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"structureType","type":{"isPrimitive":false,"simpleName":"StructureType","qualifiedName":"org.bukkit.StructureType","dimension":"","elementType":{}}},{"name":"radius","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"findUnexplored","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spigot","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Spigot","qualifiedName":"org.bukkit.World.Spigot","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}