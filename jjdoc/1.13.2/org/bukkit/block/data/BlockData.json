{"name":"BlockData","comment":"","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"BlockData","qualifiedName":"org.bukkit.block.data.BlockData","dimension":"","elementType":{},"package":"org.bukkit.block.data","interfaces":["java.lang.Cloneable"],"isAbstract":true,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getMaterial","comment":"Get the Material represented by this block data.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAsString","comment":"Gets a string, which when passed into a method such as\n {@link Server#createBlockData(java.lang.String)} will unambiguously\n recreate this instance.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAsString","comment":"Gets a string, which when passed into a method such as\n {@link Server#createBlockData(java.lang.String)} will recreate this or a\n similar instance where unspecified states (if any) may be optionally\n omitted. If this instance was parsed and states are omitted, this exact\n instance will be creatable when parsed again, else their equality cannot\n be guaranteed.\n \u003cp\u003e\n This method will only take effect for BlockData instances created by\n methods such as {@link Server#createBlockData(String)} or any similar\n method whereby states are optionally defined. If otherwise, the result of\n {@link #getAsString()} will be returned. The following behaviour would be\n expected:\n \u003cpre\u003e{@code\n String dataString \u003d \"minecraft:chest[waterlogged\u003dtrue]\"\n BlockData data \u003d Bukkit.createBlockData(dataString);\n dataString.equals(data.getAsString(true)); // This would return true\n dataString.equals(data.getAsString(false)); // This would return false as all states are present\n dataString.equals(data.getAsString()); // This is equivalent to the above, \"getAsString(false)\"\n }\u003c/pre\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"hideUnspecified","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"merge","comment":"Merges all explicitly set states from the given data with this BlockData.\n \u003cbr\u003e\n Note that the given data MUST have been created from one of the String\n parse methods, e.g. {@link Server#createBlockData(java.lang.String)} and\n not have been subsequently modified.\n \u003cbr\u003e\n Note also that the block types must match identically.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.block.data.BlockData)","flatSignature":"(BlockData)","returnType":{"isPrimitive":false,"simpleName":"BlockData","qualifiedName":"org.bukkit.block.data.BlockData","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"data","type":{"isPrimitive":false,"simpleName":"BlockData","qualifiedName":"org.bukkit.block.data.BlockData","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"matches","comment":"Checks if the specified BlockData matches this block data.\n \u003cbr\u003e\n The semantics of this method are such that for manually created or\n modified BlockData it has the same effect as\n {@link Object#equals(java.lang.Object)}, whilst for parsed data (that to\n which {@link #merge(org.bukkit.block.data.BlockData)} applies, it will\n return true when the type and all explicitly set states match.\n \u003cbr\u003e\n \u003cb\u003eNote that these semantics mean that a.matches(b) may not be the same\n as b.matches(a)\u003c/b\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.block.data.BlockData)","flatSignature":"(BlockData)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"data","type":{"isPrimitive":false,"simpleName":"BlockData","qualifiedName":"org.bukkit.block.data.BlockData","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"clone","comment":"Returns a copy of this BlockData.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BlockData","qualifiedName":"org.bukkit.block.data.BlockData","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subInterfaces":["org.bukkit.block.data.Levelled","org.bukkit.block.data.Ageable","org.bukkit.block.data.Bisected","org.bukkit.block.data.Lightable","org.bukkit.block.data.Snowable","org.bukkit.block.data.Waterlogged","org.bukkit.block.data.MultipleFacing","org.bukkit.block.data.Rail","org.bukkit.block.data.Attachable","org.bukkit.block.data.Orientable","org.bukkit.block.data.Powerable","org.bukkit.block.data.Openable","org.bukkit.block.data.AnaloguePowerable","org.bukkit.block.data.Directional","org.bukkit.block.data.Rotatable","org.bukkit.block.data.type.Cake","org.bukkit.block.data.type.Jukebox","org.bukkit.block.data.type.Leaves","org.bukkit.block.data.type.TurtleEgg","org.bukkit.block.data.type.TNT","org.bukkit.block.data.type.Sapling","org.bukkit.block.data.type.BrewingStand","org.bukkit.block.data.type.BubbleColumn","org.bukkit.block.data.type.StructureBlock","org.bukkit.block.data.type.Snow","org.bukkit.block.data.type.Farmland"],"enumConstants":[]}