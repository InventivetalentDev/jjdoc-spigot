{"name":"Player","comment":"Represents a player, connected or not","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Player","qualifiedName":"org.bukkit.entity.Player","dimension":"","elementType":{},"package":"org.bukkit.entity","interfaces":["org.bukkit.entity.HumanEntity","org.bukkit.conversations.Conversable","org.bukkit.OfflinePlayer","org.bukkit.plugin.messaging.PluginMessageRecipient"],"isAbstract":true,"isStatic":false,"innerClasses":["org.bukkit.entity.Player.Spigot"],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getDisplayName","comment":"Gets the \"friendly\" name to display of this player. This may include\n color.\n \u003cp\u003e\n Note that this name will not be displayed in game, only in chat and\n places defined by plugins.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setDisplayName","comment":"Sets the \"friendly\" name to display of this player. This may include\n color.\n \u003cp\u003e\n Note that this name will not be displayed in game, only in chat and\n places defined by plugins.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getPlayerListName","comment":"Gets the name that is shown on the player list.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setPlayerListName","comment":"Sets the name that is shown on the in-game player list.\n \u003cp\u003e\n If the value is null, the name will be identical to {@link #getName()}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getPlayerListHeader","comment":"Gets the currently displayed player list header for this player.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPlayerListFooter","comment":"Gets the currently displayed player list footer for this player.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setPlayerListHeader","comment":"Sets the currently displayed player list header for this player.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"header","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setPlayerListFooter","comment":"Sets the currently displayed player list footer for this player.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"footer","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setPlayerListHeaderFooter","comment":"Sets the currently displayed player list header and footer for this\n player.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"header","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"footer","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setCompassTarget","comment":"Set the target of the player\u0027s compass.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location)","flatSignature":"(Location)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getCompassTarget","comment":"Get the previously set compass target.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAddress","comment":"Gets the socket address of this player","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"InetSocketAddress","qualifiedName":"java.net.InetSocketAddress","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"sendRawMessage","comment":"Sends this sender a message raw","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"message","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"kickPlayer","comment":"Kicks player with custom kick message.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"message","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"chat","comment":"Says a message (or runs a command).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"msg","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"performCommand","comment":"Makes the player perform the given command","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"command","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isSneaking","comment":"Returns if the player is in sneak mode","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setSneaking","comment":"Sets the sneak mode the player","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"sneak","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isSprinting","comment":"Gets whether the player is sprinting or not.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setSprinting","comment":"Sets whether the player is sprinting or not.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"sprinting","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"saveData","comment":"Saves the players current location, health, inventory, motion, and\n other information into the username.dat file, in the world/player\n folder","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"loadData","comment":"Loads the players current location, health, inventory, motion, and\n other information from the username.dat file, in the world/player\n folder.\n \u003cp\u003e\n Note: This will overwrite the players current inventory, health,\n motion, etc, with the state from the saved dat file.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setSleepingIgnored","comment":"Sets whether the player is ignored as not sleeping. If everyone is\n either sleeping or has this flag set, then time will advance to the\n next day. If everyone has this flag set but no one is actually in bed,\n then nothing will happen.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"isSleeping","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isSleepingIgnored","comment":"Returns whether the player is sleeping ignored.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"playNote","comment":"Play a note for a player at a location. This requires a note block\n at the particular location (as far as the client is concerned). This\n will not work without a note block. This will not work with cake.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, byte, byte)","flatSignature":"(Location, byte, byte)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"instrument","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}},{"name":"note","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playNote","comment":"Play a note for a player at a location. This requires a note block\n at the particular location (as far as the client is concerned). This\n will not work without a note block. This will not work with cake.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.Instrument, org.bukkit.Note)","flatSignature":"(Location, Instrument, Note)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"instrument","type":{"isPrimitive":false,"simpleName":"Instrument","qualifiedName":"org.bukkit.Instrument","dimension":"","elementType":{}}},{"name":"note","type":{"isPrimitive":false,"simpleName":"Note","qualifiedName":"org.bukkit.Note","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playSound","comment":"Play a sound for a player at the location.\n \u003cp\u003e\n This function will fail silently if Location or Sound are null.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.Sound, float, float)","flatSignature":"(Location, Sound, float, float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"sound","type":{"isPrimitive":false,"simpleName":"Sound","qualifiedName":"org.bukkit.Sound","dimension":"","elementType":{}}},{"name":"volume","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"pitch","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playSound","comment":"Play a sound for a player at the location.\n \u003cp\u003e\n This function will fail silently if Location or Sound are null. No\n sound will be heard by the player if their client does not have the\n respective sound for the value passed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, java.lang.String, float, float)","flatSignature":"(Location, String, float, float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"sound","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"volume","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"pitch","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playSound","comment":"Play a sound for a player at the location.\n \u003cp\u003e\n This function will fail silently if Location or Sound are null.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.Sound, org.bukkit.SoundCategory, float, float)","flatSignature":"(Location, Sound, SoundCategory, float, float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"sound","type":{"isPrimitive":false,"simpleName":"Sound","qualifiedName":"org.bukkit.Sound","dimension":"","elementType":{}}},{"name":"category","type":{"isPrimitive":false,"simpleName":"SoundCategory","qualifiedName":"org.bukkit.SoundCategory","dimension":"","elementType":{}}},{"name":"volume","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"pitch","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playSound","comment":"Play a sound for a player at the location.\n \u003cp\u003e\n This function will fail silently if Location or Sound are null. No sound\n will be heard by the player if their client does not have the respective\n sound for the value passed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, java.lang.String, org.bukkit.SoundCategory, float, float)","flatSignature":"(Location, String, SoundCategory, float, float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"sound","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"category","type":{"isPrimitive":false,"simpleName":"SoundCategory","qualifiedName":"org.bukkit.SoundCategory","dimension":"","elementType":{}}},{"name":"volume","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"pitch","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"stopSound","comment":"Stop the specified sound from playing.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Sound)","flatSignature":"(Sound)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"sound","type":{"isPrimitive":false,"simpleName":"Sound","qualifiedName":"org.bukkit.Sound","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"stopSound","comment":"Stop the specified sound from playing.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"sound","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"stopSound","comment":"Stop the specified sound from playing.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Sound, org.bukkit.SoundCategory)","flatSignature":"(Sound, SoundCategory)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"sound","type":{"isPrimitive":false,"simpleName":"Sound","qualifiedName":"org.bukkit.Sound","dimension":"","elementType":{}}},{"name":"category","type":{"isPrimitive":false,"simpleName":"SoundCategory","qualifiedName":"org.bukkit.SoundCategory","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"stopSound","comment":"Stop the specified sound from playing.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, org.bukkit.SoundCategory)","flatSignature":"(String, SoundCategory)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"sound","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"category","type":{"isPrimitive":false,"simpleName":"SoundCategory","qualifiedName":"org.bukkit.SoundCategory","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playEffect","comment":"Plays an effect to just this player.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.Effect, int)","flatSignature":"(Location, Effect, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"effect","type":{"isPrimitive":false,"simpleName":"Effect","qualifiedName":"org.bukkit.Effect","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"playEffect","comment":"Plays an effect to just this player.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.Effect, T)","flatSignature":"(Location, Effect, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"effect","type":{"isPrimitive":false,"simpleName":"Effect","qualifiedName":"org.bukkit.Effect","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"sendBlockChange","comment":"Send a block change. This fakes a block change packet for a user at a\n certain location. This will not actually change the world in any way.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.Material, byte)","flatSignature":"(Location, Material, byte)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"sendBlockChange","comment":"Send a block change. This fakes a block change packet for a user at a\n certain location. This will not actually change the world in any way.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, org.bukkit.block.data.BlockData)","flatSignature":"(Location, BlockData)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"block","type":{"isPrimitive":false,"simpleName":"BlockData","qualifiedName":"org.bukkit.block.data.BlockData","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"sendChunkChange","comment":"Send a chunk change. This fakes a chunk change packet for a user at a\n certain location. The updated cuboid must be entirely within a single\n chunk. This will not actually change the world in any way.\n \u003cp\u003e\n At least one of the dimensions of the cuboid must be even. The size of\n the data buffer must be 2.5*sx*sy*sz and formatted in accordance with\n the Packet51 format.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, int, int, int, byte[])","flatSignature":"(Location, int, int, int, byte[])","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"sx","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"sy","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"sz","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"sendSignChange","comment":"Send a sign change. This fakes a sign change packet for a user at\n a certain location. This will not actually change the world in any way.\n This method will use a sign at the location\u0027s block or a faked sign\n sent via\n {@link #sendBlockChange(org.bukkit.Location, org.bukkit.Material, byte)}.\n \u003cp\u003e\n If the client does not have a sign at the given location it will\n display an error message to the user.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Location, java.lang.String[])","flatSignature":"(Location, String[])","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"loc","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"lines","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"sendMap","comment":"Render a map and send it to the player in its entirety. This may be\n used when streaming the map in the normal manner is not desirable.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.map.MapView)","flatSignature":"(MapView)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"map","type":{"isPrimitive":false,"simpleName":"MapView","qualifiedName":"org.bukkit.map.MapView","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"updateInventory","comment":"Forces an update of the player\u0027s entire inventory.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"awardAchievement","comment":"Awards the given achievement and any parent achievements that the\n player does not have.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Achievement)","flatSignature":"(Achievement)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"achievement","type":{"isPrimitive":false,"simpleName":"Achievement","qualifiedName":"org.bukkit.Achievement","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"removeAchievement","comment":"Removes the given achievement and any children achievements that the\n player has.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Achievement)","flatSignature":"(Achievement)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"achievement","type":{"isPrimitive":false,"simpleName":"Achievement","qualifiedName":"org.bukkit.Achievement","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hasAchievement","comment":"Gets whether this player has the given achievement.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Achievement)","flatSignature":"(Achievement)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"achievement","type":{"isPrimitive":false,"simpleName":"Achievement","qualifiedName":"org.bukkit.Achievement","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"incrementStatistic","comment":"Increments the given statistic for this player.\n \u003cp\u003e\n This is equivalent to the following code:\n \u003ccode\u003eincrementStatistic(Statistic, 1)\u003c/code\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic)","flatSignature":"(Statistic)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"decrementStatistic","comment":"Decrements the given statistic for this player.\n \u003cp\u003e\n This is equivalent to the following code:\n \u003ccode\u003edecrementStatistic(Statistic, 1)\u003c/code\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic)","flatSignature":"(Statistic)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"incrementStatistic","comment":"Increments the given statistic for this player.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, int)","flatSignature":"(Statistic, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"amount","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"decrementStatistic","comment":"Decrements the given statistic for this player.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, int)","flatSignature":"(Statistic, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"amount","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setStatistic","comment":"Sets the given statistic for this player.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, int)","flatSignature":"(Statistic, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"newValue","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getStatistic","comment":"Gets the value of the given statistic for this player.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic)","flatSignature":"(Statistic)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"incrementStatistic","comment":"Increments the given statistic for this player for the given material.\n \u003cp\u003e\n This is equivalent to the following code:\n \u003ccode\u003eincrementStatistic(Statistic, Material, 1)\u003c/code\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, org.bukkit.Material)","flatSignature":"(Statistic, Material)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"decrementStatistic","comment":"Decrements the given statistic for this player for the given material.\n \u003cp\u003e\n This is equivalent to the following code:\n \u003ccode\u003edecrementStatistic(Statistic, Material, 1)\u003c/code\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, org.bukkit.Material)","flatSignature":"(Statistic, Material)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getStatistic","comment":"Gets the value of the given statistic for this player.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, org.bukkit.Material)","flatSignature":"(Statistic, Material)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"incrementStatistic","comment":"Increments the given statistic for this player for the given material.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, org.bukkit.Material, int)","flatSignature":"(Statistic, Material, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}},{"name":"amount","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"decrementStatistic","comment":"Decrements the given statistic for this player for the given material.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, org.bukkit.Material, int)","flatSignature":"(Statistic, Material, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}},{"name":"amount","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setStatistic","comment":"Sets the given statistic for this player for the given material.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, org.bukkit.Material, int)","flatSignature":"(Statistic, Material, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}},{"name":"newValue","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"incrementStatistic","comment":"Increments the given statistic for this player for the given entity.\n \u003cp\u003e\n This is equivalent to the following code:\n \u003ccode\u003eincrementStatistic(Statistic, EntityType, 1)\u003c/code\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, org.bukkit.entity.EntityType)","flatSignature":"(Statistic, EntityType)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"entityType","type":{"isPrimitive":false,"simpleName":"EntityType","qualifiedName":"org.bukkit.entity.EntityType","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"decrementStatistic","comment":"Decrements the given statistic for this player for the given entity.\n \u003cp\u003e\n This is equivalent to the following code:\n \u003ccode\u003edecrementStatistic(Statistic, EntityType, 1)\u003c/code\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, org.bukkit.entity.EntityType)","flatSignature":"(Statistic, EntityType)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"entityType","type":{"isPrimitive":false,"simpleName":"EntityType","qualifiedName":"org.bukkit.entity.EntityType","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getStatistic","comment":"Gets the value of the given statistic for this player.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, org.bukkit.entity.EntityType)","flatSignature":"(Statistic, EntityType)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"entityType","type":{"isPrimitive":false,"simpleName":"EntityType","qualifiedName":"org.bukkit.entity.EntityType","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"incrementStatistic","comment":"Increments the given statistic for this player for the given entity.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, org.bukkit.entity.EntityType, int)","flatSignature":"(Statistic, EntityType, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"entityType","type":{"isPrimitive":false,"simpleName":"EntityType","qualifiedName":"org.bukkit.entity.EntityType","dimension":"","elementType":{}}},{"name":"amount","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"decrementStatistic","comment":"Decrements the given statistic for this player for the given entity.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, org.bukkit.entity.EntityType, int)","flatSignature":"(Statistic, EntityType, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"entityType","type":{"isPrimitive":false,"simpleName":"EntityType","qualifiedName":"org.bukkit.entity.EntityType","dimension":"","elementType":{}}},{"name":"amount","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setStatistic","comment":"Sets the given statistic for this player for the given entity.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Statistic, org.bukkit.entity.EntityType, int)","flatSignature":"(Statistic, EntityType, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"statistic","type":{"isPrimitive":false,"simpleName":"Statistic","qualifiedName":"org.bukkit.Statistic","dimension":"","elementType":{}}},{"name":"entityType","type":{"isPrimitive":false,"simpleName":"EntityType","qualifiedName":"org.bukkit.entity.EntityType","dimension":"","elementType":{}}},{"name":"newValue","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setPlayerTime","comment":"Sets the current time on the player\u0027s client. When relative is true the\n player\u0027s time will be kept synchronized to its world time with the\n specified offset.\n \u003cp\u003e\n When using non relative time the player\u0027s time will stay fixed at the\n specified time parameter. It\u0027s up to the caller to continue updating\n the player\u0027s time. To restore player time to normal use\n resetPlayerTime().","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(long, boolean)","flatSignature":"(long, boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"time","type":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}}},{"name":"relative","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getPlayerTime","comment":"Returns the player\u0027s current timestamp.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPlayerTimeOffset","comment":"Returns the player\u0027s current time offset relative to server time, or\n the current player\u0027s fixed time if the player\u0027s time is absolute.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isPlayerTimeRelative","comment":"Returns true if the player\u0027s time is relative to the server time,\n otherwise the player\u0027s time is absolute and will not change its current\n time unless done so with setPlayerTime().","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"resetPlayerTime","comment":"Restores the normal condition where the player\u0027s time is synchronized\n with the server time.\n \u003cp\u003e\n Equivalent to calling setPlayerTime(0, true).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setPlayerWeather","comment":"Sets the type of weather the player will see.  When used, the weather\n status of the player is locked until {@link #resetPlayerWeather()} is\n used.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.WeatherType)","flatSignature":"(WeatherType)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"type","type":{"isPrimitive":false,"simpleName":"WeatherType","qualifiedName":"org.bukkit.WeatherType","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getPlayerWeather","comment":"Returns the type of weather the player is currently experiencing.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"WeatherType","qualifiedName":"org.bukkit.WeatherType","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"resetPlayerWeather","comment":"Restores the normal condition where the player\u0027s weather is controlled\n by server conditions.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"giveExp","comment":"Gives the player the amount of experience specified.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"amount","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"giveExpLevels","comment":"Gives the player the amount of experience levels specified. Levels can\n be taken by specifying a negative amount.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"amount","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getExp","comment":"Gets the players current experience points towards the next level.\n \u003cp\u003e\n This is a percentage value. 0 is \"no progress\" and 1 is \"next level\".","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setExp","comment":"Sets the players current experience points towards the next level\n \u003cp\u003e\n This is a percentage value. 0 is \"no progress\" and 1 is \"next level\".","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(float)","flatSignature":"(float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"exp","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getLevel","comment":"Gets the players current experience level","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setLevel","comment":"Sets the players current experience level","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"level","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getTotalExperience","comment":"Gets the players total experience points.\n \u003cbr\u003e\n This refers to the total amount of experience the player has collected\n over time and is only displayed as the player\u0027s \"score\" upon dying.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setTotalExperience","comment":"Sets the players current experience points.\n \u003cbr\u003e\n This refers to the total amount of experience the player has collected\n over time and is only displayed as the player\u0027s \"score\" upon dying.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"exp","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getExhaustion","comment":"Gets the players current exhaustion level.\n \u003cp\u003e\n Exhaustion controls how fast the food level drops. While you have a\n certain amount of exhaustion, your saturation will drop to zero, and\n then your food will drop to zero.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setExhaustion","comment":"Sets the players current exhaustion level","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(float)","flatSignature":"(float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getSaturation","comment":"Gets the players current saturation level.\n \u003cp\u003e\n Saturation is a buffer for food level. Your food level will not drop if\n you are saturated {@literal \u003e} 0.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setSaturation","comment":"Sets the players current saturation level","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(float)","flatSignature":"(float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getFoodLevel","comment":"Gets the players current food level","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setFoodLevel","comment":"Sets the players current food level","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getAllowFlight","comment":"Determines if the Player is allowed to fly via jump key double-tap like\n in creative mode.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setAllowFlight","comment":"Sets if the Player is allowed to fly via jump key double-tap like in\n creative mode.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"flight","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hidePlayer","comment":"Hides a player from this player","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.entity.Player)","flatSignature":"(Player)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"player","type":{"isPrimitive":false,"simpleName":"Player","qualifiedName":"org.bukkit.entity.Player","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hidePlayer","comment":"Hides a player from this player","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.plugin.Plugin, org.bukkit.entity.Player)","flatSignature":"(Plugin, Player)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"plugin","type":{"isPrimitive":false,"simpleName":"Plugin","qualifiedName":"org.bukkit.plugin.Plugin","dimension":"","elementType":{}}},{"name":"player","type":{"isPrimitive":false,"simpleName":"Player","qualifiedName":"org.bukkit.entity.Player","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"showPlayer","comment":"Allows this player to see a player that was previously hidden","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.entity.Player)","flatSignature":"(Player)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"player","type":{"isPrimitive":false,"simpleName":"Player","qualifiedName":"org.bukkit.entity.Player","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"showPlayer","comment":"Allows this player to see a player that was previously hidden. If\n another another plugin had hidden the player too, then the player will\n remain hidden until the other plugin calls this method too.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.plugin.Plugin, org.bukkit.entity.Player)","flatSignature":"(Plugin, Player)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"plugin","type":{"isPrimitive":false,"simpleName":"Plugin","qualifiedName":"org.bukkit.plugin.Plugin","dimension":"","elementType":{}}},{"name":"player","type":{"isPrimitive":false,"simpleName":"Player","qualifiedName":"org.bukkit.entity.Player","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"canSee","comment":"Checks to see if a player has been hidden from this player","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.entity.Player)","flatSignature":"(Player)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"player","type":{"isPrimitive":false,"simpleName":"Player","qualifiedName":"org.bukkit.entity.Player","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isFlying","comment":"Checks to see if this player is currently flying or not.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setFlying","comment":"Makes this player start or stop flying.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setFlySpeed","comment":"Sets the speed at which a client will fly. Negative values indicate\n reverse directions.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(float)","flatSignature":"(float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setWalkSpeed","comment":"Sets the speed at which a client will walk. Negative values indicate\n reverse directions.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(float)","flatSignature":"(float)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getFlySpeed","comment":"Gets the current allowed speed that a client can fly.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getWalkSpeed","comment":"Gets the current allowed speed that a client can walk.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setTexturePack","comment":"Request that the player\u0027s client download and switch texture packs.\n \u003cp\u003e\n The player\u0027s client will download the new texture pack asynchronously\n in the background, and will automatically switch to it once the\n download is complete. If the client has downloaded and cached the same\n texture pack in the past, it will perform a file size check against\n the response content to determine if the texture pack has changed and\n needs to be downloaded again. When this request is sent for the very\n first time from a given server, the client will first display a\n confirmation GUI to the player before proceeding with the download.\n \u003cp\u003e\n Notes:\n \u003cul\u003e\n \u003cli\u003ePlayers can disable server textures on their client, in which\n     case this method will have no affect on them. Use the\n     {@link PlayerResourcePackStatusEvent} to figure out whether or not\n     the player loaded the pack!\n \u003cli\u003eThere is no concept of resetting texture packs back to default\n     within Minecraft, so players will have to relog to do so or you\n     have to send an empty pack.\n \u003cli\u003eThe request is send with \"null\" as the hash. This might result\n     in newer versions not loading the pack correctly.\n \u003c/ul\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"url","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setResourcePack","comment":"Request that the player\u0027s client download and switch resource packs.\n \u003cp\u003e\n The player\u0027s client will download the new resource pack asynchronously\n in the background, and will automatically switch to it once the\n download is complete. If the client has downloaded and cached the same\n resource pack in the past, it will perform a file size check against\n the response content to determine if the resource pack has changed and\n needs to be downloaded again. When this request is sent for the very\n first time from a given server, the client will first display a\n confirmation GUI to the player before proceeding with the download.\n \u003cp\u003e\n Notes:\n \u003cul\u003e\n \u003cli\u003ePlayers can disable server resources on their client, in which\n     case this method will have no affect on them. Use the\n     {@link PlayerResourcePackStatusEvent} to figure out whether or not\n     the player loaded the pack!\n \u003cli\u003eThere is no concept of resetting resource packs back to default\n     within Minecraft, so players will have to relog to do so or you\n     have to send an empty pack.\n \u003cli\u003eThe request is send with \"null\" as the hash. This might result\n     in newer versions not loading the pack correctly.\n \u003c/ul\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"url","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setResourcePack","comment":"Request that the player\u0027s client download and switch resource packs.\n \u003cp\u003e\n The player\u0027s client will download the new resource pack asynchronously\n in the background, and will automatically switch to it once the\n download is complete. If the client has downloaded and cached a\n resource pack with the same hash in the past it will not download but\n directly apply the cached pack. When this request is sent for the very\n first time from a given server, the client will first display a\n confirmation GUI to the player before proceeding with the download.\n \u003cp\u003e\n Notes:\n \u003cul\u003e\n \u003cli\u003ePlayers can disable server resources on their client, in which\n     case this method will have no affect on them. Use the\n     {@link PlayerResourcePackStatusEvent} to figure out whether or not\n     the player loaded the pack!\n \u003cli\u003eThere is no concept of resetting resource packs back to default\n     within Minecraft, so players will have to relog to do so or you\n     have to send an empty pack.\n \u003c/ul\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, byte[])","flatSignature":"(String, byte[])","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"url","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"hash","type":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"[]","elementType":{"isPrimitive":true,"simpleName":"byte","qualifiedName":"byte","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"getScoreboard","comment":"Gets the Scoreboard displayed to this player","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Scoreboard","qualifiedName":"org.bukkit.scoreboard.Scoreboard","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setScoreboard","comment":"Sets the player\u0027s visible Scoreboard.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.scoreboard.Scoreboard)","flatSignature":"(Scoreboard)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"scoreboard","type":{"isPrimitive":false,"simpleName":"Scoreboard","qualifiedName":"org.bukkit.scoreboard.Scoreboard","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isHealthScaled","comment":"Gets if the client is displayed a \u0027scaled\u0027 health, that is, health on a\n scale from 0-{@link #getHealthScale()}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setHealthScaled","comment":"Sets if the client is displayed a \u0027scaled\u0027 health, that is, health on a\n scale from 0-{@link #getHealthScale()}.\n \u003cp\u003e\n Displayed health follows a simple formula \u003ccode\u003edisplayedHealth \u003d\n getHealth() / getMaxHealth() * getHealthScale()\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"scale","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setHealthScale","comment":"Sets the number to scale health to for the client; this will also\n {@link #setHealthScaled(boolean) setHealthScaled(true)}.\n \u003cp\u003e\n Displayed health follows a simple formula \u003ccode\u003edisplayedHealth \u003d\n getHealth() / getMaxHealth() * getHealthScale()\u003c/code\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double)","flatSignature":"(double)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"scale","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getHealthScale","comment":"Gets the number that health is scaled to for the client.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getSpectatorTarget","comment":"Gets the entity which is followed by the camera when in\n {@link GameMode#SPECTATOR}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Entity","qualifiedName":"org.bukkit.entity.Entity","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setSpectatorTarget","comment":"Sets the entity which is followed by the camera when in\n {@link GameMode#SPECTATOR}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.entity.Entity)","flatSignature":"(Entity)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"entity","type":{"isPrimitive":false,"simpleName":"Entity","qualifiedName":"org.bukkit.entity.Entity","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"sendTitle","comment":"Sends a title and a subtitle message to the player. If either of these\n values are null, they will not be sent and the display will remain\n unchanged. If they are empty strings, the display will be updated as\n such. If the strings contain a new line, only the first line will be\n sent. The titles will be displayed with the client\u0027s default timings.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"title","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"subtitle","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"sendTitle","comment":"Sends a title and a subtitle message to the player. If either of these\n values are null, they will not be sent and the display will remain\n unchanged. If they are empty strings, the display will be updated as\n such. If the strings contain a new line, only the first line will be\n sent. All timings values may take a value of -1 to indicate that they\n will use the last value sent (or the defaults if no title has been\n displayed).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String, int, int, int)","flatSignature":"(String, String, int, int, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"title","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"subtitle","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"fadeIn","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"stay","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"fadeOut","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"resetTitle","comment":"Resets the title displayed to the player. This will clear the displayed\n title / subtitle and reset timings to their default values.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, org.bukkit.Location, int)","flatSignature":"(Particle, Location, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, double, double, double, int)","flatSignature":"(Particle, double, double, double, int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, org.bukkit.Location, int, T)","flatSignature":"(Particle, Location, int, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, double, double, double, int, T)","flatSignature":"(Particle, double, double, double, int, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, org.bukkit.Location, int, double, double, double)","flatSignature":"(Particle, Location, int, double, double, double)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, double, double, double, int, double, double, double)","flatSignature":"(Particle, double, double, double, int, double, double, double)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, org.bukkit.Location, int, double, double, double, T)","flatSignature":"(Particle, Location, int, double, double, double, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, double, double, double, int, double, double, double, T)","flatSignature":"(Particle, double, double, double, int, double, double, double, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, org.bukkit.Location, int, double, double, double, double)","flatSignature":"(Particle, Location, int, double, double, double, double)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"extra","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, double, double, double, int, double, double, double, double)","flatSignature":"(Particle, double, double, double, int, double, double, double, double)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"extra","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, org.bukkit.Location, int, double, double, double, double, T)","flatSignature":"(Particle, Location, int, double, double, double, double, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"extra","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"spawnParticle","comment":"Spawns the particle (the number of times specified by count)\n at the target location. The position of each particle will be\n randomized positively and negatively by the offset parameters\n on each axis.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Particle, double, double, double, int, double, double, double, double, T)","flatSignature":"(Particle, double, double, double, int, double, double, double, double, T)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"particle","type":{"isPrimitive":false,"simpleName":"Particle","qualifiedName":"org.bukkit.Particle","dimension":"","elementType":{}}},{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"count","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"offsetX","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetY","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"offsetZ","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"extra","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"T","qualifiedName":"T","dimension":"","elementType":{},"typeVariable":{"name":"T","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]}]},{"name":"getAdvancementProgress","comment":"Return the player\u0027s progression on the specified advancement.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.advancement.Advancement)","flatSignature":"(Advancement)","returnType":{"isPrimitive":false,"simpleName":"AdvancementProgress","qualifiedName":"org.bukkit.advancement.AdvancementProgress","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"advancement","type":{"isPrimitive":false,"simpleName":"Advancement","qualifiedName":"org.bukkit.advancement.Advancement","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getClientViewDistance","comment":"Get the player\u0027s current client side view distance.\n \u003cbr\u003e\n Will default to the server view distance if the client has not yet\n communicated this information,","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getLocale","comment":"Gets the player\u0027s current locale.\n\n The value of the locale String is not defined properly.\n \u003cbr\u003e\n The vanilla Minecraft client will use lowercase language / country pairs\n separated by an underscore, but custom resource packs may use any format\n they wish.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"updateCommands","comment":"Update the list of commands sent to the client.\n \u003cbr\u003e\n Generally useful to ensure the client has a complete list of commands\n after permission changes are done.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"spigot","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Spigot","qualifiedName":"org.bukkit.entity.Player.Spigot","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}