{"name":"Server","comment":"Represents a server implementation.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Server","qualifiedName":"org.bukkit.Server","dimension":"","elementType":{},"package":"org.bukkit","interfaces":["org.bukkit.plugin.messaging.PluginMessageRecipient"],"isAbstract":true,"isStatic":false,"innerClasses":["org.bukkit.Server.Spigot"],"isInnerClass":false,"constructors":[],"fields":[{"name":"BROADCAST_CHANNEL_ADMINISTRATIVE","comment":"Used for all administrative messages, such as an operator using a\n command.\n \u003cp\u003e\n For use in {@link #broadcast(java.lang.String, java.lang.String)}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isStatic":true,"constantValue":"\"bukkit.broadcast.admin\""},{"name":"BROADCAST_CHANNEL_USERS","comment":"Used for all announcement messages, such as informing users that a\n player has joined.\n \u003cp\u003e\n For use in {@link #broadcast(java.lang.String, java.lang.String)}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":true,"isMethod":false,"isOrdinaryClass":false,"type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isStatic":true,"constantValue":"\"bukkit.broadcast.user\""}],"methods":[{"name":"getName","comment":"Gets the name of this server implementation.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getVersion","comment":"Gets the version string of this server implementation.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getBukkitVersion","comment":"Gets the Bukkit version that this server is running.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getOnlinePlayers","comment":"Gets a view of all currently logged in players. This {@linkplain\n Collections#unmodifiableCollection(Collection) view} is a reused\n object, making some operations like {@link Collection#size()}\n zero-allocation.\n \u003cp\u003e\n The collection is a view backed by the internal representation, such\n that, changes to the internal state of the server will be reflected\n immediately. However, the reuse of the returned collection (identity)\n is not strictly guaranteed for future or all implementations. Casting\n the collection, or relying on interface implementations (like {@link\n Serializable} or {@link List}), is deprecated.\n \u003cp\u003e\n Iteration behavior is undefined outside of self-contained main-thread\n uses. Normal and immediate iterator use without consequences that\n affect the collection are fully supported. The effects following\n (non-exhaustive) {@link Entity#teleport(Location) teleportation},\n {@link Player#setHealth(double) death}, and {@link Player#kickPlayer(\n String) kicking} are undefined. Any use of this collection from\n asynchronous threads is unsafe.\n \u003cp\u003e\n For safe consequential iteration or mimicking the old array behavior,\n using {@link Collection#toArray(Object[])} is recommended. For making\n snapshots, {@link ImmutableList#copyOf(Collection)} is recommended.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Collection","qualifiedName":"java.util.Collection","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getMaxPlayers","comment":"Get the maximum amount of players which can login to this server.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPort","comment":"Get the game port that the server runs on.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getViewDistance","comment":"Get the view distance from this server.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getIp","comment":"Get the IP that this server is bound to, or empty string if not\n specified.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getServerName","comment":"Get the name of this server.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getServerId","comment":"Get an ID of this server. The ID is a simple generally alphanumeric ID\n that can be used for uniquely identifying this server.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getWorldType","comment":"Get world type (level-type setting) for default world.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getGenerateStructures","comment":"Get generate-structures setting.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAllowEnd","comment":"Gets whether this server allows the End or not.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAllowNether","comment":"Gets whether this server allows the Nether or not.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"hasWhitelist","comment":"Gets whether this server has a whitelist or not.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setWhitelist","comment":"Sets if the server is whitelisted.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getWhitelistedPlayers","comment":"Gets a list of whitelisted players.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Set","qualifiedName":"java.util.Set","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"reloadWhitelist","comment":"Reloads the whitelist from disk.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"broadcastMessage","comment":"Broadcast a message to all players.\n \u003cp\u003e\n This is the same as calling {@link #broadcast(java.lang.String,\n java.lang.String)} to {@link #BROADCAST_CHANNEL_USERS}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"message","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getUpdateFolder","comment":"Gets the name of the update folder. The update folder is used to safely\n update plugins at the right moment on a plugin load.\n \u003cp\u003e\n The update folder name is relative to the plugins folder.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getUpdateFolderFile","comment":"Gets the update folder. The update folder is used to safely update\n plugins at the right moment on a plugin load.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"File","qualifiedName":"java.io.File","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getConnectionThrottle","comment":"Gets the value of the connection throttle setting.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"long","qualifiedName":"long","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getTicksPerAnimalSpawns","comment":"Gets default ticks per animal spawns value.\n \u003cp\u003e\n \u003cb\u003eExample Usage:\u003c/b\u003e\n \u003cul\u003e\n \u003cli\u003eA value of 1 will mean the server will attempt to spawn monsters\n     every tick.\n \u003cli\u003eA value of 400 will mean the server will attempt to spawn monsters\n     every 400th tick.\n \u003cli\u003eA value below 0 will be reset back to Minecraft\u0027s default.\n \u003c/ul\u003e\n \u003cp\u003e\n \u003cb\u003eNote:\u003c/b\u003e If set to 0, animal spawning will be disabled. We\n recommend using spawn-animals to control this instead.\n \u003cp\u003e\n Minecraft default: 400.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getTicksPerMonsterSpawns","comment":"Gets the default ticks per monster spawns value.\n \u003cp\u003e\n \u003cb\u003eExample Usage:\u003c/b\u003e\n \u003cul\u003e\n \u003cli\u003eA value of 1 will mean the server will attempt to spawn monsters\n     every tick.\n \u003cli\u003eA value of 400 will mean the server will attempt to spawn monsters\n     every 400th tick.\n \u003cli\u003eA value below 0 will be reset back to Minecraft\u0027s default.\n \u003c/ul\u003e\n \u003cp\u003e\n \u003cb\u003eNote:\u003c/b\u003e If set to 0, monsters spawning will be disabled. We\n recommend using spawn-monsters to control this instead.\n \u003cp\u003e\n Minecraft default: 1.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPlayer","comment":"Gets a player object by the given username.\n \u003cp\u003e\n This method may not return objects for offline players.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"Player","qualifiedName":"org.bukkit.entity.Player","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getPlayerExact","comment":"Gets the player with the exact given name, case insensitive.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"Player","qualifiedName":"org.bukkit.entity.Player","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"matchPlayer","comment":"Attempts to match any players with the given name, and returns a list\n of all possibly matches.\n \u003cp\u003e\n This list is not sorted in any particular order. If an exact match is\n found, the returned list will only contain a single result.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"List","qualifiedName":"java.util.List","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getPlayer","comment":"Gets the player with the given UUID.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.UUID)","flatSignature":"(UUID)","returnType":{"isPrimitive":false,"simpleName":"Player","qualifiedName":"org.bukkit.entity.Player","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"id","type":{"isPrimitive":false,"simpleName":"UUID","qualifiedName":"java.util.UUID","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getPluginManager","comment":"Gets the plugin manager for interfacing with plugins.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"PluginManager","qualifiedName":"org.bukkit.plugin.PluginManager","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getScheduler","comment":"Gets the scheduler for managing scheduled events.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BukkitScheduler","qualifiedName":"org.bukkit.scheduler.BukkitScheduler","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getServicesManager","comment":"Gets a services manager.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"ServicesManager","qualifiedName":"org.bukkit.plugin.ServicesManager","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getWorlds","comment":"Gets a list of all worlds on this server.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"List","qualifiedName":"java.util.List","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"createWorld","comment":"Creates or loads a world with the given name using the specified\n options.\n \u003cp\u003e\n If the world is already loaded, it will just return the equivalent of\n getWorld(creator.name()).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.WorldCreator)","flatSignature":"(WorldCreator)","returnType":{"isPrimitive":false,"simpleName":"World","qualifiedName":"org.bukkit.World","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"creator","type":{"isPrimitive":false,"simpleName":"WorldCreator","qualifiedName":"org.bukkit.WorldCreator","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"unloadWorld","comment":"Unloads a world with the given name.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, boolean)","flatSignature":"(String, boolean)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"save","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"unloadWorld","comment":"Unloads the given world.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.World, boolean)","flatSignature":"(World, boolean)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"world","type":{"isPrimitive":false,"simpleName":"World","qualifiedName":"org.bukkit.World","dimension":"","elementType":{}}},{"name":"save","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getWorld","comment":"Gets the world with the given name.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"World","qualifiedName":"org.bukkit.World","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getWorld","comment":"Gets the world from the given Unique ID.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.UUID)","flatSignature":"(UUID)","returnType":{"isPrimitive":false,"simpleName":"World","qualifiedName":"org.bukkit.World","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"uid","type":{"isPrimitive":false,"simpleName":"UUID","qualifiedName":"java.util.UUID","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getMap","comment":"Gets the map from the given item ID.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":false,"simpleName":"MapView","qualifiedName":"org.bukkit.map.MapView","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"id","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createMap","comment":"Create a new map with an automatically assigned ID.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.World)","flatSignature":"(World)","returnType":{"isPrimitive":false,"simpleName":"MapView","qualifiedName":"org.bukkit.map.MapView","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"world","type":{"isPrimitive":false,"simpleName":"World","qualifiedName":"org.bukkit.World","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createExplorerMap","comment":"Create a new explorer map targeting the closest nearby structure of a\n given {@link StructureType}.\n \u003cbr\u003e\n This method uses implementation default values for radius and\n findUnexplored (usually 100, true).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.World, org.bukkit.Location, org.bukkit.StructureType)","flatSignature":"(World, Location, StructureType)","returnType":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"world","type":{"isPrimitive":false,"simpleName":"World","qualifiedName":"org.bukkit.World","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"structureType","type":{"isPrimitive":false,"simpleName":"StructureType","qualifiedName":"org.bukkit.StructureType","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createExplorerMap","comment":"Create a new explorer map targeting the closest nearby structure of a\n given {@link StructureType}.\n \u003cbr\u003e\n This method uses implementation default values for radius and\n findUnexplored (usually 100, true).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.World, org.bukkit.Location, org.bukkit.StructureType, int, boolean)","flatSignature":"(World, Location, StructureType, int, boolean)","returnType":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"world","type":{"isPrimitive":false,"simpleName":"World","qualifiedName":"org.bukkit.World","dimension":"","elementType":{}}},{"name":"location","type":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}}},{"name":"structureType","type":{"isPrimitive":false,"simpleName":"StructureType","qualifiedName":"org.bukkit.StructureType","dimension":"","elementType":{}}},{"name":"radius","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"findUnexplored","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"reload","comment":"Reloads the server, refreshing settings and plugin information.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"reloadData","comment":"Reload only the Minecraft data for the server. This includes custom\n advancements and loot tables.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getLogger","comment":"Returns the primary logger associated with this server instance.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Logger","qualifiedName":"java.util.logging.Logger","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getPluginCommand","comment":"Gets a {@link PluginCommand} with the given name or alias.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"PluginCommand","qualifiedName":"org.bukkit.command.PluginCommand","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"savePlayers","comment":"Writes loaded players to disk.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"dispatchCommand","comment":"Dispatches a command on this server, and executes it if found.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.command.CommandSender, java.lang.String)","flatSignature":"(CommandSender, String)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"sender","type":{"isPrimitive":false,"simpleName":"CommandSender","qualifiedName":"org.bukkit.command.CommandSender","dimension":"","elementType":{}}},{"name":"commandLine","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"addRecipe","comment":"Adds a recipe to the crafting manager.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.Recipe)","flatSignature":"(Recipe)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"recipe","type":{"isPrimitive":false,"simpleName":"Recipe","qualifiedName":"org.bukkit.inventory.Recipe","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getRecipesFor","comment":"Get a list of all recipes for a given item. The stack size is ignored\n in comparisons. If the durability is -1, it will match any data value.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemStack)","flatSignature":"(ItemStack)","returnType":{"isPrimitive":false,"simpleName":"List","qualifiedName":"java.util.List","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"result","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"recipeIterator","comment":"Get an iterator through the list of crafting recipes.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Iterator","qualifiedName":"java.util.Iterator","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"clearRecipes","comment":"Clears the list of crafting recipes.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"resetRecipes","comment":"Resets the list of crafting recipes to the default.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getCommandAliases","comment":"Gets a list of command aliases defined in the server properties.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Map","qualifiedName":"java.util.Map","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getSpawnRadius","comment":"Gets the radius, in blocks, around each worlds spawn point to protect.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setSpawnRadius","comment":"Sets the radius, in blocks, around each worlds spawn point to protect.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"value","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getOnlineMode","comment":"Gets whether the Server is in online mode or not.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAllowFlight","comment":"Gets whether this server allows flying or not.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isHardcore","comment":"Gets whether the server is in hardcore mode or not.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"shutdown","comment":"Shutdowns the server, stopping everything.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"broadcast","comment":"Broadcasts the specified message to every user with the given\n permission name.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.String)","flatSignature":"(String, String)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"message","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"permission","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getOfflinePlayer","comment":"Gets the player by the given name, regardless if they are offline or\n online.\n \u003cp\u003e\n This method may involve a blocking web request to get the UUID for the\n given name.\n \u003cp\u003e\n This will return an object even if the player does not exist. To this\n method, all players will exist.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"OfflinePlayer","qualifiedName":"org.bukkit.OfflinePlayer","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getOfflinePlayer","comment":"Gets the player by the given UUID, regardless if they are offline or\n online.\n \u003cp\u003e\n This will return an object even if the player does not exist. To this\n method, all players will exist.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.UUID)","flatSignature":"(UUID)","returnType":{"isPrimitive":false,"simpleName":"OfflinePlayer","qualifiedName":"org.bukkit.OfflinePlayer","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"id","type":{"isPrimitive":false,"simpleName":"UUID","qualifiedName":"java.util.UUID","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getIPBans","comment":"Gets a set containing all current IPs that are banned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Set","qualifiedName":"java.util.Set","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"banIP","comment":"Bans the specified address from the server.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"address","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"unbanIP","comment":"Unbans the specified address from the server.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"address","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getBannedPlayers","comment":"Gets a set containing all banned players.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Set","qualifiedName":"java.util.Set","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getBanList","comment":"Gets a ban list for the supplied type.\n \u003cp\u003e\n Bans by name are no longer supported and this method will return\n null when trying to request them. The replacement is bans by UUID.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.BanList.Type)","flatSignature":"(BanList.Type)","returnType":{"isPrimitive":false,"simpleName":"BanList","qualifiedName":"org.bukkit.BanList","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"type","type":{"isPrimitive":false,"simpleName":"Type","qualifiedName":"org.bukkit.BanList.Type","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getOperators","comment":"Gets a set containing all player operators.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Set","qualifiedName":"java.util.Set","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getDefaultGameMode","comment":"Gets the default {@link GameMode} for new players.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"GameMode","qualifiedName":"org.bukkit.GameMode","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setDefaultGameMode","comment":"Sets the default {@link GameMode} for new players.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.GameMode)","flatSignature":"(GameMode)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"mode","type":{"isPrimitive":false,"simpleName":"GameMode","qualifiedName":"org.bukkit.GameMode","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getConsoleSender","comment":"Gets a {@link ConsoleCommandSender} that may be used as an input source\n for this server.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"ConsoleCommandSender","qualifiedName":"org.bukkit.command.ConsoleCommandSender","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getWorldContainer","comment":"Gets the folder that contains all of the various {@link World}s.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"File","qualifiedName":"java.io.File","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getOfflinePlayers","comment":"Gets every player that has ever played on this server.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"OfflinePlayer","qualifiedName":"org.bukkit.OfflinePlayer","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"OfflinePlayer","qualifiedName":"org.bukkit.OfflinePlayer","dimension":"","elementType":{}}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getMessenger","comment":"Gets the {@link Messenger} responsible for this server.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Messenger","qualifiedName":"org.bukkit.plugin.messaging.Messenger","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getHelpMap","comment":"Gets the {@link HelpMap} providing help topics for this server.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"HelpMap","qualifiedName":"org.bukkit.help.HelpMap","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"createInventory","comment":"Creates an empty inventory with the specified type and title. If the type\n is {@link InventoryType#CHEST}, the new inventory has a size of 27;\n otherwise the new inventory has the normal size for its type.\u003cbr\u003e\n It should be noted that some inventory types do not support titles and\n may not render with said titles on the Minecraft client.\n \u003cbr\u003e\n {@link InventoryType#WORKBENCH} will not process crafting recipes if\n created with this method. Use\n {@link Player#openWorkbench(Location, boolean)} instead.\n \u003cbr\u003e\n {@link InventoryType#ENCHANTING} will not process {@link ItemStack}s\n for possible enchanting results. Use\n {@link Player#openEnchanting(Location, boolean)} instead.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.InventoryHolder, org.bukkit.event.inventory.InventoryType)","flatSignature":"(InventoryHolder, InventoryType)","returnType":{"isPrimitive":false,"simpleName":"Inventory","qualifiedName":"org.bukkit.inventory.Inventory","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"owner","type":{"isPrimitive":false,"simpleName":"InventoryHolder","qualifiedName":"org.bukkit.inventory.InventoryHolder","dimension":"","elementType":{}}},{"name":"type","type":{"isPrimitive":false,"simpleName":"InventoryType","qualifiedName":"org.bukkit.event.inventory.InventoryType","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createInventory","comment":"Creates an empty inventory with the specified type and title. If the type\n is {@link InventoryType#CHEST}, the new inventory has a size of 27;\n otherwise the new inventory has the normal size for its type.\u003cbr\u003e\n It should be noted that some inventory types do not support titles and\n may not render with said titles on the Minecraft client.\n \u003cbr\u003e\n {@link InventoryType#WORKBENCH} will not process crafting recipes if\n created with this method. Use\n {@link Player#openWorkbench(Location, boolean)} instead.\n \u003cbr\u003e\n {@link InventoryType#ENCHANTING} will not process {@link ItemStack}s\n for possible enchanting results. Use\n {@link Player#openEnchanting(Location, boolean)} instead.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.InventoryHolder, org.bukkit.event.inventory.InventoryType, java.lang.String)","flatSignature":"(InventoryHolder, InventoryType, String)","returnType":{"isPrimitive":false,"simpleName":"Inventory","qualifiedName":"org.bukkit.inventory.Inventory","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"owner","type":{"isPrimitive":false,"simpleName":"InventoryHolder","qualifiedName":"org.bukkit.inventory.InventoryHolder","dimension":"","elementType":{}}},{"name":"type","type":{"isPrimitive":false,"simpleName":"InventoryType","qualifiedName":"org.bukkit.event.inventory.InventoryType","dimension":"","elementType":{}}},{"name":"title","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createInventory","comment":"Creates an empty inventory of type {@link InventoryType#CHEST} with the\n specified size.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.InventoryHolder, int)","flatSignature":"(InventoryHolder, int)","returnType":{"isPrimitive":false,"simpleName":"Inventory","qualifiedName":"org.bukkit.inventory.Inventory","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"owner","type":{"isPrimitive":false,"simpleName":"InventoryHolder","qualifiedName":"org.bukkit.inventory.InventoryHolder","dimension":"","elementType":{}}},{"name":"size","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createInventory","comment":"Creates an empty inventory of type {@link InventoryType#CHEST} with the\n specified size and title.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.InventoryHolder, int, java.lang.String)","flatSignature":"(InventoryHolder, int, String)","returnType":{"isPrimitive":false,"simpleName":"Inventory","qualifiedName":"org.bukkit.inventory.Inventory","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"owner","type":{"isPrimitive":false,"simpleName":"InventoryHolder","qualifiedName":"org.bukkit.inventory.InventoryHolder","dimension":"","elementType":{}}},{"name":"size","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"title","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createMerchant","comment":"Creates an empty merchant.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"Merchant","qualifiedName":"org.bukkit.inventory.Merchant","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"title","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getMonsterSpawnLimit","comment":"Gets user-specified limit for number of monsters that can spawn in a\n chunk.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAnimalSpawnLimit","comment":"Gets user-specified limit for number of animals that can spawn in a\n chunk.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getWaterAnimalSpawnLimit","comment":"Gets user-specified limit for number of water animals that can spawn in\n a chunk.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAmbientSpawnLimit","comment":"Gets user-specified limit for number of ambient mobs that can spawn in\n a chunk.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isPrimaryThread","comment":"Checks the current thread against the expected primary thread for the\n server.\n \u003cp\u003e\n \u003cb\u003eNote:\u003c/b\u003e this method should not be used to indicate the current\n synchronized state of the runtime. A current thread matching the main\n thread indicates that it is synchronized, but a mismatch \u003cb\u003edoes not\n preclude\u003c/b\u003e the same assumption.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getMotd","comment":"Gets the message that is displayed on the server list.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getShutdownMessage","comment":"Gets the default message that is displayed when the server is stopped.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getWarningState","comment":"Gets the current warning state for the server.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"WarningState","qualifiedName":"org.bukkit.Warning.WarningState","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getItemFactory","comment":"Gets the instance of the item factory (for {@link ItemMeta}).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"ItemFactory","qualifiedName":"org.bukkit.inventory.ItemFactory","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getScoreboardManager","comment":"Gets the instance of the scoreboard manager.\n \u003cp\u003e\n This will only exist after the first world has loaded.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"ScoreboardManager","qualifiedName":"org.bukkit.scoreboard.ScoreboardManager","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getServerIcon","comment":"Gets an instance of the server\u0027s default server-icon.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"CachedServerIcon","qualifiedName":"org.bukkit.util.CachedServerIcon","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"loadServerIcon","comment":"Loads an image from a file, and returns a cached image for the specific\n server-icon.\n \u003cp\u003e\n Size and type are implementation defined. An incompatible file is\n guaranteed to throw an implementation-defined {@link Exception}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.io.File)","flatSignature":"(File)","returnType":{"isPrimitive":false,"simpleName":"CachedServerIcon","qualifiedName":"org.bukkit.util.CachedServerIcon","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"file","type":{"isPrimitive":false,"simpleName":"File","qualifiedName":"java.io.File","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"loadServerIcon","comment":"Creates a cached server-icon for the specific image.\n \u003cp\u003e\n Size and type are implementation defined. An incompatible file is\n guaranteed to throw an implementation-defined {@link Exception}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.awt.image.BufferedImage)","flatSignature":"(BufferedImage)","returnType":{"isPrimitive":false,"simpleName":"CachedServerIcon","qualifiedName":"org.bukkit.util.CachedServerIcon","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"image","type":{"isPrimitive":false,"simpleName":"BufferedImage","qualifiedName":"java.awt.image.BufferedImage","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setIdleTimeout","comment":"Set the idle kick timeout. Any players idle for the specified amount of\n time will be automatically kicked.\n \u003cp\u003e\n A value of 0 will disable the idle kick timeout.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"threshold","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getIdleTimeout","comment":"Gets the idle kick timeout.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"createChunkData","comment":"Create a ChunkData for use in a generator.\n \n See {@link ChunkGenerator#generateChunkData(org.bukkit.World, java.util.Random, int, int, org.bukkit.generator.ChunkGenerator.BiomeGrid)}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.World)","flatSignature":"(World)","returnType":{"isPrimitive":false,"simpleName":"ChunkData","qualifiedName":"org.bukkit.generator.ChunkGenerator.ChunkData","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"world","type":{"isPrimitive":false,"simpleName":"World","qualifiedName":"org.bukkit.World","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createBossBar","comment":"Creates a boss bar instance to display to players. The progress\n defaults to 1.0","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, org.bukkit.boss.BarColor, org.bukkit.boss.BarStyle, org.bukkit.boss.BarFlag...)","flatSignature":"(String, BarColor, BarStyle, BarFlag...)","returnType":{"isPrimitive":false,"simpleName":"BossBar","qualifiedName":"org.bukkit.boss.BossBar","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"title","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"color","type":{"isPrimitive":false,"simpleName":"BarColor","qualifiedName":"org.bukkit.boss.BarColor","dimension":"","elementType":{}}},{"name":"style","type":{"isPrimitive":false,"simpleName":"BarStyle","qualifiedName":"org.bukkit.boss.BarStyle","dimension":"","elementType":{}}},{"name":"flags","type":{"isPrimitive":false,"simpleName":"BarFlag","qualifiedName":"org.bukkit.boss.BarFlag","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"BarFlag","qualifiedName":"org.bukkit.boss.BarFlag","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"createBossBar","comment":"Creates a boss bar instance to display to players. The progress defaults\n to 1.0.\n \u003cbr\u003e\n This instance is added to the persistent storage of the server and will\n be editable by commands and restored after restart.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.NamespacedKey, java.lang.String, org.bukkit.boss.BarColor, org.bukkit.boss.BarStyle, org.bukkit.boss.BarFlag...)","flatSignature":"(NamespacedKey, String, BarColor, BarStyle, BarFlag...)","returnType":{"isPrimitive":false,"simpleName":"KeyedBossBar","qualifiedName":"org.bukkit.boss.KeyedBossBar","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"NamespacedKey","qualifiedName":"org.bukkit.NamespacedKey","dimension":"","elementType":{}}},{"name":"title","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"color","type":{"isPrimitive":false,"simpleName":"BarColor","qualifiedName":"org.bukkit.boss.BarColor","dimension":"","elementType":{}}},{"name":"style","type":{"isPrimitive":false,"simpleName":"BarStyle","qualifiedName":"org.bukkit.boss.BarStyle","dimension":"","elementType":{}}},{"name":"flags","type":{"isPrimitive":false,"simpleName":"BarFlag","qualifiedName":"org.bukkit.boss.BarFlag","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"BarFlag","qualifiedName":"org.bukkit.boss.BarFlag","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"getBossBars","comment":"Gets an unmodifiable iterator through all persistent bossbars.\n \u003cul\u003e\n   \u003cli\u003e\u003cb\u003enot\u003c/b\u003e bound to a {@link org.bukkit.entity.Boss}\u003c/li\u003e\n   \u003cli\u003e\n     \u003cb\u003enot\u003c/b\u003e created using\n     {@link #createBossBar(String, BarColor, BarStyle, BarFlag...)}\n   \u003c/li\u003e\n \u003c/ul\u003e\n\n e.g. bossbars created using the bossbar command","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Iterator","qualifiedName":"java.util.Iterator","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getBossBar","comment":"Gets the {@link KeyedBossBar} specified by this key.\n \u003cul\u003e\n   \u003cli\u003e\u003cb\u003enot\u003c/b\u003e bound to a {@link org.bukkit.entity.Boss}\u003c/li\u003e\n   \u003cli\u003e\n     \u003cb\u003enot\u003c/b\u003e created using\n     {@link #createBossBar(String, BarColor, BarStyle, BarFlag...)}\n   \u003c/li\u003e\n \u003c/ul\u003e\n\n e.g. bossbars created using the bossbar command","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.NamespacedKey)","flatSignature":"(NamespacedKey)","returnType":{"isPrimitive":false,"simpleName":"KeyedBossBar","qualifiedName":"org.bukkit.boss.KeyedBossBar","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"NamespacedKey","qualifiedName":"org.bukkit.NamespacedKey","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"removeBossBar","comment":"Removes a {@link KeyedBossBar} specified by this key.\n \u003cul\u003e\n   \u003cli\u003e\u003cb\u003enot\u003c/b\u003e bound to a {@link org.bukkit.entity.Boss}\u003c/li\u003e\n   \u003cli\u003e\n     \u003cb\u003enot\u003c/b\u003e created using\n     {@link #createBossBar(String, BarColor, BarStyle, BarFlag...)}\n   \u003c/li\u003e\n \u003c/ul\u003e\n\n e.g. bossbars created using the bossbar command","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.NamespacedKey)","flatSignature":"(NamespacedKey)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"NamespacedKey","qualifiedName":"org.bukkit.NamespacedKey","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getEntity","comment":"Gets an entity on the server by its UUID","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.UUID)","flatSignature":"(UUID)","returnType":{"isPrimitive":false,"simpleName":"Entity","qualifiedName":"org.bukkit.entity.Entity","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"uuid","type":{"isPrimitive":false,"simpleName":"UUID","qualifiedName":"java.util.UUID","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getAdvancement","comment":"Get the advancement specified by this key.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.NamespacedKey)","flatSignature":"(NamespacedKey)","returnType":{"isPrimitive":false,"simpleName":"Advancement","qualifiedName":"org.bukkit.advancement.Advancement","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"NamespacedKey","qualifiedName":"org.bukkit.NamespacedKey","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"advancementIterator","comment":"Get an iterator through all advancements. Advancements cannot be removed\n from this iterator,","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Iterator","qualifiedName":"java.util.Iterator","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"createBlockData","comment":"Creates a new {@link BlockData} instance for the specified Material, with\n all properties initialized to unspecified defaults.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Material)","flatSignature":"(Material)","returnType":{"isPrimitive":false,"simpleName":"BlockData","qualifiedName":"org.bukkit.block.data.BlockData","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createBlockData","comment":"Creates a new {@link BlockData} instance for the specified Material, with\n all properties initialized to unspecified defaults.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Material, java.util.function.Consumer\u003corg.bukkit.block.data.BlockData\u003e)","flatSignature":"(Material, Consumer\u003cBlockData\u003e)","returnType":{"isPrimitive":false,"simpleName":"BlockData","qualifiedName":"org.bukkit.block.data.BlockData","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}},{"name":"consumer","type":{"isPrimitive":false,"simpleName":"Consumer","qualifiedName":"java.util.function.Consumer","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createBlockData","comment":"Creates a new {@link BlockData} instance with material and properties\n parsed from provided data.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":false,"simpleName":"BlockData","qualifiedName":"org.bukkit.block.data.BlockData","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"data","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"createBlockData","comment":"Creates a new {@link BlockData} instance for the specified Material, with\n all properties initialized to unspecified defaults, except for those\n provided in data.\n \u003cbr\u003e\n If \u003ccode\u003ematerial\u003c/code\u003e is specified, then the data string must not also\n contain the material.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Material, java.lang.String)","flatSignature":"(Material, String)","returnType":{"isPrimitive":false,"simpleName":"BlockData","qualifiedName":"org.bukkit.block.data.BlockData","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}},{"name":"data","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getTag","comment":"Gets a tag which has already been defined within the server. Plugins are\n suggested to use the concrete tags in {@link Tag} rather than this method\n which makes no guarantees about which tags are available, and may also be\n less performant due to lack of caching.\n \u003cbr\u003e\n Tags will be searched for in an implementation specific manner, but a\n path consisting of namespace/tags/registry/key is expected.\n \u003cbr\u003e\n Server implementations are allowed to handle only the registries\n indicated in {@link Tag}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, org.bukkit.NamespacedKey, java.lang.Class\u003cT\u003e)","flatSignature":"(String, NamespacedKey, Class\u003cT\u003e)","returnType":{"isPrimitive":false,"simpleName":"Tag","qualifiedName":"org.bukkit.Tag","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"registry","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"tag","type":{"isPrimitive":false,"simpleName":"NamespacedKey","qualifiedName":"org.bukkit.NamespacedKey","dimension":"","elementType":{}}},{"name":"clazz","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":["org.bukkit.Keyed"]}]},{"name":"getTags","comment":"Gets a all tags which have been defined within the server.\n \u003cbr\u003e\n Server implementations are allowed to handle only the registries\n indicated in {@link Tag}.\n \u003cbr\u003e\n No guarantees are made about the mutability of the returned iterator.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String, java.lang.Class\u003cT\u003e)","flatSignature":"(String, Class\u003cT\u003e)","returnType":{"isPrimitive":false,"simpleName":"Iterable","qualifiedName":"java.lang.Iterable","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"registry","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}},{"name":"clazz","type":{"isPrimitive":false,"simpleName":"Class","qualifiedName":"java.lang.Class","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":["org.bukkit.Keyed"]}]},{"name":"getLootTable","comment":"Gets the specified {@link LootTable}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.NamespacedKey)","flatSignature":"(NamespacedKey)","returnType":{"isPrimitive":false,"simpleName":"LootTable","qualifiedName":"org.bukkit.loot.LootTable","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"NamespacedKey","qualifiedName":"org.bukkit.NamespacedKey","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"selectEntities","comment":"Selects entities using the given Vanilla selector.\n \u003cbr\u003e\n No guarantees are made about the selector format, other than they match\n the Vanilla format for the active Minecraft version.\n \u003cbr\u003e\n Usually a selector will start with \u0027@\u0027, unless selecting a Player in\n which case it may simply be the Player\u0027s name or UUID.\n \u003cbr\u003e\n Note that in Vanilla, elevated permissions are usually required to use\n \u0027@\u0027 selectors, but this method should not check such permissions from the\n sender.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.command.CommandSender, java.lang.String)","flatSignature":"(CommandSender, String)","returnType":{"isPrimitive":false,"simpleName":"List","qualifiedName":"java.util.List","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"sender","type":{"isPrimitive":false,"simpleName":"CommandSender","qualifiedName":"org.bukkit.command.CommandSender","dimension":"","elementType":{}}},{"name":"selector","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getUnsafe","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"UnsafeValues","qualifiedName":"org.bukkit.UnsafeValues","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"spigot","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Spigot","qualifiedName":"org.bukkit.Server.Spigot","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}