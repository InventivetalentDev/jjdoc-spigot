{"name":"Event","comment":"Represents an event.\n\n All events require a static method named getHandlerList() which returns the same {@link HandlerList} as {@link #getHandlers()}.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"Event","qualifiedName":"org.bukkit.event.Event","dimension":"","elementType":{},"package":"org.bukkit.event","superclass":"java.lang.Object","interfaces":[],"isAbstract":true,"isStatic":false,"innerClasses":["org.bukkit.event.Event.Result"],"isInnerClass":false,"constructors":[{"name":"Event","comment":"The default constructor is defined for cleaner code. This constructor\n assumes the event is synchronous.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]},{"name":"Event","comment":"This constructor is used to explicitly declare an event as synchronous\n or asynchronous.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","parameters":[{"name":"isAsync","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"getEventName","comment":"Convenience method for providing a user-friendly identifier. By\n default, it is the event\u0027s class\u0027s {@linkplain Class#getSimpleName()\n simple name}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getHandlers","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"HandlerList","qualifiedName":"org.bukkit.event.HandlerList","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isAsynchronous","comment":"Any custom event that should not by synchronized with other events must\n use the specific constructor. These are the caveats of using an\n asynchronous event:\n \u003cul\u003e\n \u003cli\u003eThe event is never fired from inside code triggered by a\n     synchronous event. Attempting to do so results in an {@link\n     java.lang.IllegalStateException}.\n \u003cli\u003eHowever, asynchronous event handlers may fire synchronous or\n     asynchronous events\n \u003cli\u003eThe event may be fired multiple times simultaneously and in any\n     order.\n \u003cli\u003eAny newly registered or unregistered handler is ignored after an\n     event starts execution.\n \u003cli\u003eThe handlers for this event may block for any length of time.\n \u003cli\u003eSome implementations may selectively declare a specific event use\n     as asynchronous. This behavior should be clearly defined.\n \u003cli\u003eAsynchronous calls are not calculated in the plugin timing system.\n \u003c/ul\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subClasses":["org.bukkit.event.entity.EntityEvent","org.bukkit.event.entity.PlayerLeashEntityEvent","org.bukkit.event.hanging.HangingEvent","org.bukkit.event.block.BlockEvent","org.bukkit.event.weather.WeatherEvent","org.bukkit.event.inventory.InventoryEvent","org.bukkit.event.inventory.InventoryMoveItemEvent","org.bukkit.event.inventory.InventoryPickupItemEvent","org.bukkit.event.server.ServerEvent","org.bukkit.event.server.TabCompleteEvent","org.bukkit.event.player.PlayerEvent","org.bukkit.event.player.PlayerPreLoginEvent","org.bukkit.event.player.AsyncPlayerPreLoginEvent","org.bukkit.event.world.WorldEvent","org.bukkit.event.vehicle.VehicleEvent"],"enumConstants":[]}