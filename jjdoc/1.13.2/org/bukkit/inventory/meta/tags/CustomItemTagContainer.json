{"name":"CustomItemTagContainer","comment":"This interface represents a map like object, capable of storing custom tags\n in it.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"CustomItemTagContainer","qualifiedName":"org.bukkit.inventory.meta.tags.CustomItemTagContainer","dimension":"","elementType":{},"package":"org.bukkit.inventory.meta.tags","interfaces":[],"isAbstract":true,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"setCustomTag","comment":"Stores a custom value on the {@link ItemMeta}.\n\n This API cannot be used to manipulate minecraft tags, as the values will\n be stored using your namespace. This method will override any existing\n value the meta may have stored under the provided key.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.NamespacedKey, org.bukkit.inventory.meta.tags.ItemTagType\u003cT, Z\u003e, Z)","flatSignature":"(NamespacedKey, ItemTagType\u003cT, Z\u003e, Z)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"NamespacedKey","qualifiedName":"org.bukkit.NamespacedKey","dimension":"","elementType":{}}},{"name":"type","type":{"isPrimitive":false,"simpleName":"ItemTagType","qualifiedName":"org.bukkit.inventory.meta.tags.ItemTagType","dimension":"","elementType":{}}},{"name":"value","type":{"isPrimitive":false,"simpleName":"Z","qualifiedName":"Z","dimension":"","elementType":{},"typeVariable":{"name":"Z","bounds":[]}}}],"typeParameters":[{"name":"T","bounds":[]},{"name":"Z","bounds":[]}]},{"name":"hasCustomTag","comment":"Returns if the item meta has a custom tag registered matching the\n provided parameters.\n\n This method will only return if the found value has the same primitive\n data type as the provided key.\n\n Storing a value using a custom {@link ItemTagType} implementation will\n not store the complex data type. Therefore storing a UUID (by storing a\n byte[]) will match hasCustomTag(\"key\" , {@link ItemTagType#BYTE_ARRAY}).\n Likewise a stored byte[] will always match your UUID {@link ItemTagType}\n even if it is not 16 bytes long.\n\n This method is only usable for custom object keys. Overwriting existing\n tags, like the the display name, will not work as the values are stored\n using your namespace.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.NamespacedKey, org.bukkit.inventory.meta.tags.ItemTagType\u003cT, Z\u003e)","flatSignature":"(NamespacedKey, ItemTagType\u003cT, Z\u003e)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"NamespacedKey","qualifiedName":"org.bukkit.NamespacedKey","dimension":"","elementType":{}}},{"name":"type","type":{"isPrimitive":false,"simpleName":"ItemTagType","qualifiedName":"org.bukkit.inventory.meta.tags.ItemTagType","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":[]},{"name":"Z","bounds":[]}]},{"name":"getCustomTag","comment":"Returns the custom tag\u0027s value that is stored on the item.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.NamespacedKey, org.bukkit.inventory.meta.tags.ItemTagType\u003cT, Z\u003e)","flatSignature":"(NamespacedKey, ItemTagType\u003cT, Z\u003e)","returnType":{"isPrimitive":false,"simpleName":"Z","qualifiedName":"Z","dimension":"","elementType":{},"typeVariable":{"name":"Z","bounds":[]}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"NamespacedKey","qualifiedName":"org.bukkit.NamespacedKey","dimension":"","elementType":{}}},{"name":"type","type":{"isPrimitive":false,"simpleName":"ItemTagType","qualifiedName":"org.bukkit.inventory.meta.tags.ItemTagType","dimension":"","elementType":{}}}],"typeParameters":[{"name":"T","bounds":[]},{"name":"Z","bounds":[]}]},{"name":"removeCustomTag","comment":"Removes a custom key from the item meta.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.NamespacedKey)","flatSignature":"(NamespacedKey)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"key","type":{"isPrimitive":false,"simpleName":"NamespacedKey","qualifiedName":"org.bukkit.NamespacedKey","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isEmpty","comment":"Returns if the container instance is empty, therefore has no entries\n inside it.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAdapterContext","comment":"Returns the adapter context this tag container uses.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"ItemTagAdapterContext","qualifiedName":"org.bukkit.inventory.meta.tags.ItemTagAdapterContext","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"enumConstants":[]}