{"name":"ItemMeta","comment":"This type represents the storage mechanism for auxiliary item data.\n \u003cp\u003e\n An implementation will handle the creation and application for ItemMeta.\n This class should not be implemented by a plugin in a live environment.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"ItemMeta","qualifiedName":"org.bukkit.inventory.meta.ItemMeta","dimension":"","elementType":{},"package":"org.bukkit.inventory.meta","interfaces":["java.lang.Cloneable","org.bukkit.configuration.serialization.ConfigurationSerializable"],"isAbstract":true,"isStatic":false,"innerClasses":["org.bukkit.inventory.meta.ItemMeta.Spigot"],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"hasDisplayName","comment":"Checks for existence of a display name.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getDisplayName","comment":"Gets the display name that is set.\n \u003cp\u003e\n Plugins should check that hasDisplayName() returns \u003ccode\u003etrue\u003c/code\u003e\n before calling this method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setDisplayName","comment":"Sets the display name.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hasLocalizedName","comment":"Checks for existence of a localized name.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getLocalizedName","comment":"Gets the localized display name that is set.\n \u003cp\u003e\n Plugins should check that hasLocalizedName() returns \u003ccode\u003etrue\u003c/code\u003e\n before calling this method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setLocalizedName","comment":"Sets the localized name.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.String)","flatSignature":"(String)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"name","type":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hasLore","comment":"Checks for existence of lore.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getLore","comment":"Gets the lore that is set.\n \u003cp\u003e\n Plugins should check if hasLore() returns \u003ccode\u003etrue\u003c/code\u003e before\n calling this method.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"List","qualifiedName":"java.util.List","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setLore","comment":"Sets the lore for this item. \n Removes lore when given null.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.List\u003cjava.lang.String\u003e)","flatSignature":"(List\u003cString\u003e)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"lore","type":{"isPrimitive":false,"simpleName":"List","qualifiedName":"java.util.List","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hasEnchants","comment":"Checks for the existence of any enchantments.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"hasEnchant","comment":"Checks for existence of the specified enchantment.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.enchantments.Enchantment)","flatSignature":"(Enchantment)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"ench","type":{"isPrimitive":false,"simpleName":"Enchantment","qualifiedName":"org.bukkit.enchantments.Enchantment","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getEnchantLevel","comment":"Checks for the level of the specified enchantment.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.enchantments.Enchantment)","flatSignature":"(Enchantment)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"ench","type":{"isPrimitive":false,"simpleName":"Enchantment","qualifiedName":"org.bukkit.enchantments.Enchantment","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getEnchants","comment":"Returns a copy the enchantments in this ItemMeta. \u003cbr\u003e \n Returns an empty map if none.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Map","qualifiedName":"java.util.Map","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"addEnchant","comment":"Adds the specified enchantment to this item meta.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.enchantments.Enchantment, int, boolean)","flatSignature":"(Enchantment, int, boolean)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"ench","type":{"isPrimitive":false,"simpleName":"Enchantment","qualifiedName":"org.bukkit.enchantments.Enchantment","dimension":"","elementType":{}}},{"name":"level","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"ignoreLevelRestriction","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"removeEnchant","comment":"Removes the specified enchantment from this item meta.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.enchantments.Enchantment)","flatSignature":"(Enchantment)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"ench","type":{"isPrimitive":false,"simpleName":"Enchantment","qualifiedName":"org.bukkit.enchantments.Enchantment","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hasConflictingEnchant","comment":"Checks if the specified enchantment conflicts with any enchantments in\n this ItemMeta.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.enchantments.Enchantment)","flatSignature":"(Enchantment)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"ench","type":{"isPrimitive":false,"simpleName":"Enchantment","qualifiedName":"org.bukkit.enchantments.Enchantment","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"addItemFlags","comment":"Set itemflags which should be ignored when rendering a ItemStack in the Client. This Method does silently ignore double set itemFlags.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemFlag...)","flatSignature":"(ItemFlag...)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"itemFlags","type":{"isPrimitive":false,"simpleName":"ItemFlag","qualifiedName":"org.bukkit.inventory.ItemFlag","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"ItemFlag","qualifiedName":"org.bukkit.inventory.ItemFlag","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"removeItemFlags","comment":"Remove specific set of itemFlags. This tells the Client it should render it again. This Method does silently ignore double removed itemFlags.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemFlag...)","flatSignature":"(ItemFlag...)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"itemFlags","type":{"isPrimitive":false,"simpleName":"ItemFlag","qualifiedName":"org.bukkit.inventory.ItemFlag","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"ItemFlag","qualifiedName":"org.bukkit.inventory.ItemFlag","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"getItemFlags","comment":"Get current set itemFlags. The collection returned is unmodifiable.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Set","qualifiedName":"java.util.Set","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"hasItemFlag","comment":"Check if the specified flag is present on this item.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemFlag)","flatSignature":"(ItemFlag)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"flag","type":{"isPrimitive":false,"simpleName":"ItemFlag","qualifiedName":"org.bukkit.inventory.ItemFlag","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isUnbreakable","comment":"Return if the unbreakable tag is true. An unbreakable item will not lose\n durability.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setUnbreakable","comment":"Sets the unbreakable tag. An unbreakable item will not lose durability.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(boolean)","flatSignature":"(boolean)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"unbreakable","type":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hasAttributeModifiers","comment":"Checks for the existence of any AttributeModifiers.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAttributeModifiers","comment":"Return an immutable copy of all Attributes and\n their modifiers in this ItemMeta.\u003cbr\u003e\n Returns null if none exist.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"\u003cany\u003e","qualifiedName":"\u003cany\u003e","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getAttributeModifiers","comment":"Return an immutable copy of all {@link Attribute}s and their\n {@link AttributeModifier}s for a given {@link EquipmentSlot}.\u003cbr\u003e\n Any {@link AttributeModifier} that does have have a given\n {@link EquipmentSlot} will be returned. This is because\n AttributeModifiers without a slot are active in any slot.\u003cbr\u003e\n If there are no attributes set for the given slot, an empty map\n will be returned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.EquipmentSlot)","flatSignature":"(EquipmentSlot)","returnType":{"isPrimitive":true,"simpleName":"\u003cany\u003e","qualifiedName":"\u003cany\u003e","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"slot","type":{"isPrimitive":false,"simpleName":"EquipmentSlot","qualifiedName":"org.bukkit.inventory.EquipmentSlot","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getAttributeModifiers","comment":"Return an immutable copy of all {@link AttributeModifier}s\n for a given {@link Attribute}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.attribute.Attribute)","flatSignature":"(Attribute)","returnType":{"isPrimitive":false,"simpleName":"Collection","qualifiedName":"java.util.Collection","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"attribute","type":{"isPrimitive":false,"simpleName":"Attribute","qualifiedName":"org.bukkit.attribute.Attribute","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"addAttributeModifier","comment":"Add an Attribute and it\u0027s Modifier.\n AttributeModifiers can now support {@link EquipmentSlot}s.\n If not set, the {@link AttributeModifier} will be active in ALL slots.\n \u003cbr\u003e\n Two {@link AttributeModifier}s that have the same {@link java.util.UUID}\n cannot exist on the same Attribute.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.attribute.Attribute, org.bukkit.attribute.AttributeModifier)","flatSignature":"(Attribute, AttributeModifier)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"attribute","type":{"isPrimitive":false,"simpleName":"Attribute","qualifiedName":"org.bukkit.attribute.Attribute","dimension":"","elementType":{}}},{"name":"modifier","type":{"isPrimitive":false,"simpleName":"AttributeModifier","qualifiedName":"org.bukkit.attribute.AttributeModifier","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setAttributeModifiers","comment":"Set all {@link Attribute}s and their {@link AttributeModifier}s.\n To clear all currently set Attributes and AttributeModifiers use\n null or an empty Multimap.\n If not null nor empty, this will filter all entries that are not-null\n and add them to the ItemStack.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(\u003cany\u003e)","flatSignature":"(\u003cany\u003e)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"attributeModifiers","type":{"isPrimitive":true,"simpleName":"\u003cany\u003e","qualifiedName":"\u003cany\u003e","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"removeAttributeModifier","comment":"Remove all {@link AttributeModifier}s associated with the given\n {@link Attribute}.\n This will return false if nothing was removed.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.attribute.Attribute)","flatSignature":"(Attribute)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"attribute","type":{"isPrimitive":false,"simpleName":"Attribute","qualifiedName":"org.bukkit.attribute.Attribute","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"removeAttributeModifier","comment":"Remove all {@link Attribute}s and {@link AttributeModifier}s for a\n given {@link EquipmentSlot}.\u003cbr\u003e\n If the given {@link EquipmentSlot} is null, this will remove all\n {@link AttributeModifier}s that do not have an EquipmentSlot set.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.EquipmentSlot)","flatSignature":"(EquipmentSlot)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"slot","type":{"isPrimitive":false,"simpleName":"EquipmentSlot","qualifiedName":"org.bukkit.inventory.EquipmentSlot","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"removeAttributeModifier","comment":"Remove a specific {@link Attribute} and {@link AttributeModifier}.\n AttributeModifiers are matched according to their {@link java.util.UUID}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.attribute.Attribute, org.bukkit.attribute.AttributeModifier)","flatSignature":"(Attribute, AttributeModifier)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"attribute","type":{"isPrimitive":false,"simpleName":"Attribute","qualifiedName":"org.bukkit.attribute.Attribute","dimension":"","elementType":{}}},{"name":"modifier","type":{"isPrimitive":false,"simpleName":"AttributeModifier","qualifiedName":"org.bukkit.attribute.AttributeModifier","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getCustomTagContainer","comment":"Returns a public custom tag container capable of storing tags on the\n item.\n\n Those tags will be sent to the client with all of their content, so the\n client is capable of reading them. This will result in the player seeing\n a NBT Tag notification on the item.\n\n These tags can also be modified by the client once in creative mode","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"CustomItemTagContainer","qualifiedName":"org.bukkit.inventory.meta.tags.CustomItemTagContainer","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"clone","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"ItemMeta","qualifiedName":"org.bukkit.inventory.meta.ItemMeta","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"spigot","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Spigot","qualifiedName":"org.bukkit.inventory.meta.ItemMeta.Spigot","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subInterfaces":["org.bukkit.inventory.meta.BannerMeta","org.bukkit.inventory.meta.FireworkMeta","org.bukkit.inventory.meta.TropicalFishBucketMeta","org.bukkit.inventory.meta.KnowledgeBookMeta","org.bukkit.inventory.meta.LeatherArmorMeta","org.bukkit.inventory.meta.SkullMeta","org.bukkit.inventory.meta.PotionMeta","org.bukkit.inventory.meta.BlockStateMeta","org.bukkit.inventory.meta.MapMeta","org.bukkit.inventory.meta.BookMeta","org.bukkit.inventory.meta.EnchantmentStorageMeta","org.bukkit.inventory.meta.SpawnEggMeta","org.bukkit.inventory.meta.FireworkEffectMeta"],"enumConstants":[]}