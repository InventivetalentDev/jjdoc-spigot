{"name":"Inventory","comment":"Interface to the various inventories. Behavior relating to {@link\n Material#AIR} is unspecified.","isClass":false,"isInterface":true,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":false,"isPrimitive":false,"simpleName":"Inventory","qualifiedName":"org.bukkit.inventory.Inventory","dimension":"","elementType":{},"package":"org.bukkit.inventory","interfaces":["java.lang.Iterable"],"isAbstract":true,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[],"fields":[],"methods":[{"name":"getSize","comment":"Returns the size of the inventory","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getMaxStackSize","comment":"Returns the maximum stack size for an ItemStack in this inventory.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setMaxStackSize","comment":"This method allows you to change the maximum stack size for an\n inventory.\n \u003cp\u003e\n \u003cb\u003eCaveats:\u003c/b\u003e\n \u003cul\u003e\n \u003cli\u003eNot all inventories respect this value.\n \u003cli\u003eStacks larger than 127 may be clipped when the world is saved.\n \u003cli\u003eThis value is not guaranteed to be preserved; be sure to set it\n     before every time you want to set a slot over the max stack size.\n \u003cli\u003eStacks larger than the default max size for this type of inventory\n     may not display correctly in the client.\n \u003c/ul\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"size","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getName","comment":"Returns the name of the inventory","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getItem","comment":"Returns the ItemStack found in the slot at the given index","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"index","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setItem","comment":"Stores the ItemStack at the given index of the inventory.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int, org.bukkit.inventory.ItemStack)","flatSignature":"(int, ItemStack)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"index","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"item","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"addItem","comment":"Stores the given ItemStacks in the inventory. This will try to fill\n existing stacks and empty slots as well as it can.\n \u003cp\u003e\n The returned HashMap contains what it couldn\u0027t store, where the key is\n the index of the parameter, and the value is the ItemStack at that\n index of the varargs parameter. If all items are stored, it will return\n an empty HashMap.\n \u003cp\u003e\n If you pass in ItemStacks which exceed the maximum stack size for the\n Material, first they will be added to partial stacks where\n Material.getMaxStackSize() is not exceeded, up to\n Material.getMaxStackSize(). When there are no partial stacks left\n stacks will be split on Inventory.getMaxStackSize() allowing you to\n exceed the maximum stack size for that material.\n \u003cp\u003e\n It is known that in some implementations this method will also set\n the inputted argument amount to the number of that item not placed in\n slots.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemStack...)","flatSignature":"(ItemStack...)","returnType":{"isPrimitive":false,"simpleName":"HashMap","qualifiedName":"java.util.HashMap","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"items","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"removeItem","comment":"Removes the given ItemStacks from the inventory.\n \u003cp\u003e\n It will try to remove \u0027as much as possible\u0027 from the types and amounts\n you give as arguments.\n \u003cp\u003e\n The returned HashMap contains what it couldn\u0027t remove, where the key is\n the index of the parameter, and the value is the ItemStack at that\n index of the varargs parameter. If all the given ItemStacks are\n removed, it will return an empty HashMap.\n \u003cp\u003e\n It is known that in some implementations this method will also set the\n inputted argument amount to the number of that item not removed from\n slots.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemStack...)","flatSignature":"(ItemStack...)","returnType":{"isPrimitive":false,"simpleName":"HashMap","qualifiedName":"java.util.HashMap","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"items","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"getContents","comment":"Returns all ItemStacks from the inventory","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setContents","comment":"Completely replaces the inventory\u0027s contents. Removes all existing\n contents and replaces it with the ItemStacks given in the array.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemStack[])","flatSignature":"(ItemStack[])","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"items","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"getStorageContents","comment":"Return the contents from the section of the inventory where items can\n reasonably be expected to be stored. In most cases this will represent\n the entire inventory, but in some cases it may exclude armor or result\n slots.\n \u003cbr\u003e\n It is these contents which will be used for add / contains / remove\n methods which look for a specific stack.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setStorageContents","comment":"Put the given ItemStacks into the storage slots","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemStack[])","flatSignature":"(ItemStack[])","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"items","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"[]","elementType":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}}}],"typeParameters":[]},{"name":"contains","comment":"Checks if the inventory contains any ItemStacks with the given\n material.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Material)","flatSignature":"(Material)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"contains","comment":"Checks if the inventory contains any ItemStacks matching the given\n ItemStack.\n \u003cp\u003e\n This will only return true if both the type and the amount of the stack\n match.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemStack)","flatSignature":"(ItemStack)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"item","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"contains","comment":"Checks if the inventory contains any ItemStacks with the given\n material, adding to at least the minimum amount specified.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Material, int)","flatSignature":"(Material, int)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}},{"name":"amount","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"contains","comment":"Checks if the inventory contains at least the minimum amount specified\n of exactly matching ItemStacks.\n \u003cp\u003e\n An ItemStack only counts if both the type and the amount of the stack\n match.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemStack, int)","flatSignature":"(ItemStack, int)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"item","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}},{"name":"amount","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"containsAtLeast","comment":"Checks if the inventory contains ItemStacks matching the given\n ItemStack whose amounts sum to at least the minimum amount specified.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemStack, int)","flatSignature":"(ItemStack, int)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"item","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}},{"name":"amount","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"all","comment":"Returns a HashMap with all slots and ItemStacks in the inventory with\n the given Material.\n \u003cp\u003e\n The HashMap contains entries where, the key is the slot index, and the\n value is the ItemStack in that slot. If no matching ItemStack with the\n given Material is found, an empty map is returned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Material)","flatSignature":"(Material)","returnType":{"isPrimitive":false,"simpleName":"HashMap","qualifiedName":"java.util.HashMap","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"all","comment":"Finds all slots in the inventory containing any ItemStacks with the\n given ItemStack. This will only match slots if both the type and the\n amount of the stack match\n \u003cp\u003e\n The HashMap contains entries where, the key is the slot index, and the\n value is the ItemStack in that slot. If no matching ItemStack with the\n given Material is found, an empty map is returned.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemStack)","flatSignature":"(ItemStack)","returnType":{"isPrimitive":false,"simpleName":"HashMap","qualifiedName":"java.util.HashMap","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"item","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"first","comment":"Finds the first slot in the inventory containing an ItemStack with the\n given material","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Material)","flatSignature":"(Material)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"first","comment":"Returns the first slot in the inventory containing an ItemStack with\n the given stack. This will only match a slot if both the type and the\n amount of the stack match","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemStack)","flatSignature":"(ItemStack)","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"item","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"firstEmpty","comment":"Returns the first empty Slot.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"remove","comment":"Removes all stacks in the inventory matching the given material.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.Material)","flatSignature":"(Material)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"material","type":{"isPrimitive":false,"simpleName":"Material","qualifiedName":"org.bukkit.Material","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"remove","comment":"Removes all stacks in the inventory matching the given stack.\n \u003cp\u003e\n This will only match a slot if both the type and the amount of the\n stack match","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.inventory.ItemStack)","flatSignature":"(ItemStack)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"item","type":{"isPrimitive":false,"simpleName":"ItemStack","qualifiedName":"org.bukkit.inventory.ItemStack","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"clear","comment":"Clears out a particular slot in the index.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"index","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"clear","comment":"Clears out the whole Inventory.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getViewers","comment":"Gets a list of players viewing the inventory. Note that a player is\n considered to be viewing their own inventory and internal crafting\n screen even when said inventory is not open. They will normally be\n considered to be viewing their inventory even when they have a\n different inventory screen open, but it\u0027s possible for customized\n inventory screens to exclude the viewer\u0027s inventory, so this should\n never be assumed to be non-empty.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"List","qualifiedName":"java.util.List","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getTitle","comment":"Returns the title of this inventory.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getType","comment":"Returns what type of inventory this is.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"InventoryType","qualifiedName":"org.bukkit.event.inventory.InventoryType","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getHolder","comment":"Gets the block or entity belonging to the open inventory","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"InventoryHolder","qualifiedName":"org.bukkit.inventory.InventoryHolder","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"iterator","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"ListIterator","qualifiedName":"java.util.ListIterator","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"iterator","comment":"Returns an iterator starting at the given index. If the index is\n positive, then the first call to next() will return the item at that\n index; if it is negative, the first call to previous will return the\n item at index (getSize() + index).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":false,"simpleName":"ListIterator","qualifiedName":"java.util.ListIterator","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[{"name":"index","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getLocation","comment":"Get the location of the block or entity which corresponds to this inventory. May return null if this container\n was custom created or is a virtual / subcontainer.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}},"isAbstract":true,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]}],"typeParameters":[],"subInterfaces":["org.bukkit.inventory.CraftingInventory","org.bukkit.inventory.AbstractHorseInventory","org.bukkit.inventory.FurnaceInventory","org.bukkit.inventory.PlayerInventory","org.bukkit.inventory.BeaconInventory","org.bukkit.inventory.EnchantingInventory","org.bukkit.inventory.AnvilInventory","org.bukkit.inventory.DoubleChestInventory","org.bukkit.inventory.BrewerInventory","org.bukkit.inventory.MerchantInventory"],"enumConstants":[]}