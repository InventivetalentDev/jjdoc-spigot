{"name":"Vector","comment":"Represents a mutable vector. Because the components of Vectors are mutable,\n storing Vectors long term may be dangerous if passing code modifies the\n Vector later. If you want to keep around a Vector, it may be wise to call\n \u003ccode\u003eclone()\u003c/code\u003e in order to get a copy.","isClass":true,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":false,"isOrdinaryClass":true,"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{},"package":"org.bukkit.util","superclass":"java.lang.Object","interfaces":["java.lang.Cloneable","org.bukkit.configuration.serialization.ConfigurationSerializable"],"isAbstract":false,"isStatic":false,"innerClasses":[],"isInnerClass":false,"constructors":[{"name":"Vector","comment":"Construct the vector with all components as 0.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","parameters":[],"typeParameters":[]},{"name":"Vector","comment":"Construct the vector with provided integer components.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(int, int, int)","flatSignature":"(int, int, int)","parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"Vector","comment":"Construct the vector with provided double components.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(double, double, double)","flatSignature":"(double, double, double)","parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"Vector","comment":"Construct the vector with provided float components.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":true,"isField":false,"isMethod":false,"isOrdinaryClass":false,"signature":"(float, float, float)","flatSignature":"(float, float, float)","parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"y","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"z","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]}],"fields":[],"methods":[{"name":"add","comment":"Adds a vector to this one","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector)","flatSignature":"(Vector)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"vec","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"subtract","comment":"Subtracts a vector from this one.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector)","flatSignature":"(Vector)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"vec","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"multiply","comment":"Multiplies the vector by another.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector)","flatSignature":"(Vector)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"vec","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"divide","comment":"Divides the vector by another.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector)","flatSignature":"(Vector)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"vec","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"copy","comment":"Copies another vector","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector)","flatSignature":"(Vector)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"vec","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"length","comment":"Gets the magnitude of the vector, defined as sqrt(x^2+y^2+z^2). The\n value of this method is not cached and uses a costly square-root\n function, so do not repeatedly call this method to get the vector\u0027s\n magnitude. NaN will be returned if the inner result of the sqrt()\n function overflows, which will be caused if the length is too long.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"lengthSquared","comment":"Gets the magnitude of the vector squared.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"distance","comment":"Get the distance between this vector and another. The value of this\n method is not cached and uses a costly square-root function, so do not\n repeatedly call this method to get the vector\u0027s magnitude. NaN will be\n returned if the inner result of the sqrt() function overflows, which\n will be caused if the distance is too long.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector)","flatSignature":"(Vector)","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"o","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"distanceSquared","comment":"Get the squared distance between this vector and another.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector)","flatSignature":"(Vector)","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"o","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"angle","comment":"Gets the angle between this vector and another in radians.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector)","flatSignature":"(Vector)","returnType":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"other","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"midpoint","comment":"Sets this vector to the midpoint between this vector and another.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector)","flatSignature":"(Vector)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"other","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getMidpoint","comment":"Gets a new midpoint vector between this vector and another.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector)","flatSignature":"(Vector)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"other","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"multiply","comment":"Performs scalar multiplication, multiplying all components with a\n scalar.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"m","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"multiply","comment":"Performs scalar multiplication, multiplying all components with a\n scalar.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double)","flatSignature":"(double)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"m","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"multiply","comment":"Performs scalar multiplication, multiplying all components with a\n scalar.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(float)","flatSignature":"(float)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"m","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"dot","comment":"Calculates the dot product of this vector with another. The dot product\n is defined as x1*x2+y1*y2+z1*z2. The returned value is a scalar.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector)","flatSignature":"(Vector)","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"other","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"crossProduct","comment":"Calculates the cross product of this vector with another. The cross\n product is defined as:\n \u003cul\u003e\n \u003cli\u003ex \u003d y1 * z2 - y2 * z1\n \u003cli\u003ey \u003d z1 * x2 - z2 * x1\n \u003cli\u003ez \u003d x1 * y2 - x2 * y1\n \u003c/ul\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector)","flatSignature":"(Vector)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"o","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getCrossProduct","comment":"Calculates the cross product of this vector with another without mutating\n the original. The cross product is defined as:\n \u003cul\u003e\n \u003cli\u003ex \u003d y1 * z2 - y2 * z1\n \u003cli\u003ey \u003d z1 * x2 - z2 * x1\n \u003cli\u003ez \u003d x1 * y2 - x2 * y1\n \u003c/ul\u003e","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector)","flatSignature":"(Vector)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"o","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"normalize","comment":"Converts this vector to a unit vector (a vector with length of 1).","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"zero","comment":"Zero this vector\u0027s components.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"isInAABB","comment":"Returns whether this vector is in an axis-aligned bounding box.\n \u003cp\u003e\n The minimum and maximum vectors given must be truly the minimum and\n maximum X, Y and Z components.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector, org.bukkit.util.Vector)","flatSignature":"(Vector, Vector)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"min","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"max","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isInSphere","comment":"Returns whether this vector is within a sphere.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector, double)","flatSignature":"(Vector, double)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"origin","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"radius","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"isNormalized","comment":"Returns if a vector is normalized","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"rotateAroundX","comment":"Rotates the vector around the x axis.\n \u003cp\u003e\n This piece of math is based on the standard rotation matrix for vectors\n in three dimensional space. This matrix can be found here:\n \u003ca href\u003d\"https://en.wikipedia.org/wiki/Rotation_matrix#Basic_rotations\"\u003eRotation\n Matrix\u003c/a\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double)","flatSignature":"(double)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"angle","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"rotateAroundY","comment":"Rotates the vector around the y axis.\n \u003cp\u003e\n This piece of math is based on the standard rotation matrix for vectors\n in three dimensional space. This matrix can be found here:\n \u003ca href\u003d\"https://en.wikipedia.org/wiki/Rotation_matrix#Basic_rotations\"\u003eRotation\n Matrix\u003c/a\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double)","flatSignature":"(double)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"angle","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"rotateAroundZ","comment":"Rotates the vector around the z axis\n \u003cp\u003e\n This piece of math is based on the standard rotation matrix for vectors\n in three dimensional space. This matrix can be found here:\n \u003ca href\u003d\"https://en.wikipedia.org/wiki/Rotation_matrix#Basic_rotations\"\u003eRotation\n Matrix\u003c/a\u003e.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double)","flatSignature":"(double)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"angle","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"rotateAroundAxis","comment":"Rotates the vector around a given arbitrary axis in 3 dimensional space.\n\n \u003cp\u003e\n Rotation will follow the general Right-Hand-Rule, which means rotation\n will be counterclockwise when the axis is pointing towards the observer.\n \u003cp\u003e\n This method will always make sure the provided axis is a unit vector, to\n not modify the length of the vector when rotating. If you are experienced\n with the scaling of a non-unit axis vector, you can use\n {@link Vector#rotateAroundNonUnitAxis(Vector, double)}.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector, double)","flatSignature":"(Vector, double)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"axis","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"angle","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"rotateAroundNonUnitAxis","comment":"Rotates the vector around a given arbitrary axis in 3 dimensional space.\n\n \u003cp\u003e\n Rotation will follow the general Right-Hand-Rule, which means rotation\n will be counterclockwise when the axis is pointing towards the observer.\n \u003cp\u003e\n Note that the vector length will change accordingly to the axis vector\n length. If the provided axis is not a unit vector, the rotated vector\n will not have its previous length. The scaled length of the resulting\n vector will be related to the axis vector. If you are not perfectly sure\n about the scaling of the vector, use\n {@link Vector#rotateAroundAxis(Vector, double)}","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector, double)","flatSignature":"(Vector, double)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"axis","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"angle","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getX","comment":"Gets the X component.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getBlockX","comment":"Gets the floored value of the X component, indicating the block that\n this vector is contained with.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getY","comment":"Gets the Y component.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getBlockY","comment":"Gets the floored value of the Y component, indicating the block that\n this vector is contained with.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getZ","comment":"Gets the Z component.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getBlockZ","comment":"Gets the floored value of the Z component, indicating the block that\n this vector is contained with.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"setX","comment":"Set the X component.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setX","comment":"Set the X component.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double)","flatSignature":"(double)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setX","comment":"Set the X component.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(float)","flatSignature":"(float)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"x","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setY","comment":"Set the Y component.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"y","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setY","comment":"Set the Y component.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double)","flatSignature":"(double)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"y","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setY","comment":"Set the Y component.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(float)","flatSignature":"(float)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"y","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setZ","comment":"Set the Z component.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(int)","flatSignature":"(int)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"z","type":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setZ","comment":"Set the Z component.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(double)","flatSignature":"(double)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"z","type":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"setZ","comment":"Set the Z component.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(float)","flatSignature":"(float)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"z","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"equals","comment":"Checks to see if two objects are equal.\n \u003cp\u003e\n Only two Vectors can ever return true. This method uses a fuzzy match\n to account for floating point errors. The epsilon can be retrieved\n with epsilon.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.lang.Object)","flatSignature":"(Object)","returnType":{"isPrimitive":true,"simpleName":"boolean","qualifiedName":"boolean","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"obj","type":{"isPrimitive":false,"simpleName":"Object","qualifiedName":"java.lang.Object","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"hashCode","comment":"Returns a hash code for this vector","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"int","qualifiedName":"int","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"clone","comment":"Get a new vector.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"toString","comment":"Returns this vector\u0027s components as x,y,z.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"String","qualifiedName":"java.lang.String","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"toLocation","comment":"Gets a Location version of this vector with yaw and pitch being 0.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.World)","flatSignature":"(World)","returnType":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"world","type":{"isPrimitive":false,"simpleName":"World","qualifiedName":"org.bukkit.World","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"toLocation","comment":"Gets a Location version of this vector.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.World, float, float)","flatSignature":"(World, float, float)","returnType":{"isPrimitive":false,"simpleName":"Location","qualifiedName":"org.bukkit.Location","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[{"name":"world","type":{"isPrimitive":false,"simpleName":"World","qualifiedName":"org.bukkit.World","dimension":"","elementType":{}}},{"name":"yaw","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}},{"name":"pitch","type":{"isPrimitive":true,"simpleName":"float","qualifiedName":"float","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"toBlockVector","comment":"Get the block vector of this vector.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"BlockVector","qualifiedName":"org.bukkit.util.BlockVector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"checkFinite","comment":"Check if each component of this Vector is finite.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"void","qualifiedName":"void","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"getEpsilon","comment":"Get the threshold used for equals().","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":true,"simpleName":"double","qualifiedName":"double","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[],"typeParameters":[]},{"name":"getMinimum","comment":"Gets the minimum components of two vectors.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector, org.bukkit.util.Vector)","flatSignature":"(Vector, Vector)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"v1","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"v2","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getMaximum","comment":"Gets the maximum components of two vectors.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(org.bukkit.util.Vector, org.bukkit.util.Vector)","flatSignature":"(Vector, Vector)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"v1","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}},{"name":"v2","type":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}}}],"typeParameters":[]},{"name":"getRandom","comment":"Gets a random vector with components having a random value between 0\n and 1.","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[],"typeParameters":[]},{"name":"serialize","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"()","flatSignature":"()","returnType":{"isPrimitive":false,"simpleName":"Map","qualifiedName":"java.util.Map","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":false,"parameters":[],"typeParameters":[]},{"name":"deserialize","comment":"","isClass":false,"isInterface":false,"isEnum":false,"isEnumConstant":false,"isConstructor":false,"isField":false,"isMethod":true,"isOrdinaryClass":false,"signature":"(java.util.Map\u003cjava.lang.String, java.lang.Object\u003e)","flatSignature":"(Map\u003cString, Object\u003e)","returnType":{"isPrimitive":false,"simpleName":"Vector","qualifiedName":"org.bukkit.util.Vector","dimension":"","elementType":{}},"isAbstract":false,"isDefault":false,"isStatic":true,"parameters":[{"name":"args","type":{"isPrimitive":false,"simpleName":"Map","qualifiedName":"java.util.Map","dimension":"","elementType":{}}}],"typeParameters":[]}],"typeParameters":[],"subClasses":["org.bukkit.util.BlockVector"],"enumConstants":[]}